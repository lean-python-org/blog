(undo-tree-save-format-version . 1)
"ed9e609e5bb4527eef01fa9a8e22369f7a1050cb"
[nil nil nil nil (25361 49320 363324 442000) 0 nil]
([nil nil ((14 . 16) (#("{" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified nil)) . -14) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (13 . 15) (#(")" 0 1 (fontified nil)) . 13) (undo-tree-id8 . -1) (12 . 13) (11 . 13) (#("(" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified nil)) . -11) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (2 . 12) (1 . 3) (#("(" 0 1 (fontified nil)) . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (1 . 2) (t . -1)) nil (25361 49320 363321 850000) 0 nil])
([nil nil ((15 . 16)) nil (25361 49320 363314 470000) 0 nil])
([nil nil ((18 . 19)) nil (25361 49320 363313 526000) 0 nil])
([nil nil ((15 . 18)) nil (25361 49320 363312 654000) 0 nil])
([nil nil ((18 . 20) (#("  " 0 2 (fontified nil)) . 17) (undo-tree-id0 . -2) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (17 . 20) (#("  " 0 2 (fontified nil)) . 16) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (18 . 19)) nil (25361 49320 363487 986000) 0 nil])
([nil nil ((nil rear-nonsticky nil 502 . 503) (nil fontified nil 17 . 503) (17 . 503)) nil (25361 49323 129861 199000) 0 nil] [nil nil ((nil rear-nonsticky nil 35 . 36) (nil fontified nil 17 . 36) (17 . 36)) ((#("template-overrides/" 0 8 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'template'" fontified nil) 8 9 (fontified nil) 9 18 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'overrides'" fontified nil) 18 19 (rear-nonsticky nil fontified nil)) . 17) (undo-tree-id13 . -19) (undo-tree-id14 . -19) (undo-tree-id15 . -8) (undo-tree-id16 . -9) (undo-tree-id17 . -18) (undo-tree-id18 . -19) (nil rear-nonsticky t 35 . 36)) (25361 49320 363266 498000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing fontified t)) . -504) (510 . 511) 503) nil (25361 49323 129855 427000) 0 nil])
nil
([nil nil ((17 . 19) (#("  " 0 2 (fontified nil)) . 16) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (15 . 19) (t 25361 49323 132681 819000)) nil (25361 49863 119616 588000) 0 nil])
([nil nil ((30 . 32) (#("{" 0 1 (fontified nil)) . -30) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (29 . 31) (#(")" 0 1 (fontified nil)) . 29) (undo-tree-id138 . -1) (28 . 29) (27 . 29) (#("(" 0 1 (fontified nil)) . -27) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (19 . 28)) nil (25361 49863 119612 424000) 0 nil])
([nil nil ((31 . 34)) nil (25361 49863 119607 160000) 0 nil])
([nil nil ((27 . 45)) nil (25361 49863 119606 353000) 0 nil])
([nil nil ((1 . 3)) nil (25361 49863 119605 441000) 0 nil])
([nil nil ((1 . 4)) nil (25361 49863 119604 774000) 0 nil])
([nil nil ((#("*" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "unterminated comment" font-lock-face font-lock-doc-face fontified t)) . -3) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) 4) nil (25361 49863 119603 600000) 0 nil])
([nil nil ((3 . 4)) nil (25361 49863 119600 577000) 0 nil])
([nil nil ((4 . 6)) nil (25361 49863 119599 692000) 0 nil])
([nil nil ((3 . 5)) nil (25361 49863 119598 865000) 0 nil])
([nil nil ((4 . 5)) nil (25361 49863 119597 973000) 0 nil])
([nil nil ((5 . 6)) nil (25361 49863 119597 226000) 0 nil])
([nil nil ((#("C" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -5) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 6) nil (25361 49863 119595 923000) 0 nil])
([nil nil ((5 . 18)) nil (25361 49863 119593 203000) 0 nil])
([nil nil ((5 . 10)) nil (25361 49863 119592 470000) 0 nil])
([nil nil ((#("O" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -10) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) 11) nil (25361 49863 119591 419000) 0 nil])
([nil nil ((10 . 11)) nil (25361 49863 119587 457000) 0 nil])
([nil nil ((23 . 28)) nil (25361 49863 119586 752000) 0 nil])
([nil nil ((#("o" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -25) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (#("r" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -26) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("m" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -27) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) 28) nil (25361 49863 119584 973000) 0 nil])
([nil nil ((25 . 29)) nil (25361 49863 119573 768000) 0 nil])
([nil nil ((nil rear-nonsticky nil 67 . 68) (nil fontified nil 29 . 68) (29 . 68)) nil (25361 49863 119572 993000) 0 nil])
([nil nil ((68 . 70)) nil (25361 49863 119571 700000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -69) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) 70) nil (25361 49863 119570 492000) 0 nil])
([nil nil ((69 . 80)) nil (25361 49863 119314 766000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . 4) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1)) nil (25361 49863 119313 623000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) 4) nil (25361 49863 119308 95000) 0 nil])
([nil nil ((3 . 4)) nil (25361 49863 119299 457000) 0 nil])
([nil nil ((#(" original" 0 2 (font-lock-face font-lock-comment-face fontified t) 2 9 (font-lock-face font-lock-comment-face fontified t)) . 8) (undo-tree-id74 . -1) (undo-tree-id75 . -3) (undo-tree-id76 . -4) (undo-tree-id77 . -5) (undo-tree-id78 . -6) (undo-tree-id79 . -7) (undo-tree-id80 . -8) (undo-tree-id81 . -9) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -2) (undo-tree-id86 . -7) (undo-tree-id87 . -9)) nil (25361 49863 119297 895000) 0 nil])
([nil nil ((13 . 22)) nil (25361 49863 119286 790000) 0 nil])
([nil nil ((22 . 24)) nil (25361 49863 119286 68000) 0 nil])
([nil nil ((70 . 73)) nil (25361 49863 119285 290000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -84) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -85) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 86) nil (25361 49863 119283 335000) 0 nil])
([nil nil ((84 . 85)) nil (25361 49863 119274 358000) 0 nil])
([nil nil ((73 . 83)) nil (25361 49863 119273 522000) 0 nil])
([nil nil ((nil rear-nonsticky nil 106 . 107) (nil fontified nil 73 . 107) (73 . 107)) nil (25361 49863 119272 620000) 0 nil])
([nil nil ((#("Copyright" 0 9 (font-lock-face font-lock-comment-face fontified t)) . 107) (undo-tree-id51 . -1) (undo-tree-id52 . -2) (undo-tree-id53 . -3) (undo-tree-id54 . -4) (undo-tree-id55 . -5) (undo-tree-id56 . -6) (undo-tree-id57 . -7) (undo-tree-id58 . -8) (undo-tree-id59 . -9) (undo-tree-id60 . -9)) nil (25361 49863 119270 942000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -105) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("
" 0 1 (font-lock-face font-lock-comment-face rear-nonsticky t fontified t)) . -106) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) 107) nil (25361 49863 119262 42000) 0 nil])
([nil nil ((105 . 106)) nil (25361 49863 119242 274000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face font-lock-comment-face fontified t)) . -105) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 106) nil (25361 49863 119240 377000) 0 nil])
([nil nil ((106 . 108)) nil (25361 49863 119226 338000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 123) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (t 25361 49863 125814 493000)) nil (25361 49866 330290 431000) 0 nil])
([nil nil ((apply -27 176 691 undo--wrap-and-run-primitive-undo 176 691 ((675 . 678) (656 . 659) (549 . 552) (502 . 505) (483 . 486) (422 . 425) (329 . 332) (287 . 290) (177 . 180) 664)) (t 25361 49866 341661 737000)) nil (25361 49872 7879 886000) 0 nil])
([nil nil ((168 . 172) (t 25361 49872 13392 668000)) nil (25361 49877 109624 985000) 0 nil])
([nil nil ((#("function loadCommentByTerm(term) {
  }" 0 8 (font-lock-face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 20 (font-lock-face font-lock-function-name-face fontified t) 20 22 (font-lock-face font-lock-function-name-face fontified t) 22 26 (font-lock-face font-lock-function-name-face fontified t) 26 27 (fontified t) 27 31 (font-lock-face js2-function-param fontified t) 31 33 (fontified t) 33 35 (fontified t) 35 37 (fontified t) 37 38 (fontified t)) . -141) (undo-tree-id185 . -38) (undo-tree-id186 . -38) (undo-tree-id187 . -35) (undo-tree-id188 . -22) (undo-tree-id189 . -22) (undo-tree-id190 . -20) (undo-tree-id191 . -20) (undo-tree-id192 . -38) (undo-tree-id193 . -37) (undo-tree-id194 . -37) (undo-tree-id195 . -38) (undo-tree-id196 . -37) (undo-tree-id197 . -38) (undo-tree-id198 . -37) (undo-tree-id199 . -38) (undo-tree-id200 . -37) (undo-tree-id201 . -38) (undo-tree-id202 . -37) (undo-tree-id203 . -38) (undo-tree-id204 . -37) (undo-tree-id205 . -38) (undo-tree-id206 . -33) (undo-tree-id207 . -34) (undo-tree-id208 . 5) (undo-tree-id209 . -34) (undo-tree-id210 . 4) (undo-tree-id211 . -37) (undo-tree-id212 . 1) (undo-tree-id213 . -38) (undo-tree-id214 . -38) (undo-tree-id215 . -37) (undo-tree-id216 . -38) 179) nil (25361 49897 17385 203000) 0 nil] [nil nil ((#("By" 0 2 (font-lock-face font-lock-function-name-face fontified t)) . 161) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2)) ((161 . 163)) (25361 49877 109458 913000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1132 . 1133) (nil fontified nil 139 . 1133) (139 . 1133)) nil (25361 49897 17288 628000) 0 nil])
nil
([nil nil ((#("export" 0 6 (cursor-sensor-functions (js2-echo-error) help-echo "SyntaxError: export declarations may only appear at top level" font-lock-face font-lock-keyword-face fontified t)) . 139) (undo-tree-id183 . -6) (undo-tree-id184 . -6)) nil (25361 49897 17287 357000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 139)) nil (25361 49897 17285 133000) 0 nil])
([nil nil ((139 . 141)) nil (25361 49897 17284 353000) 0 nil])
([nil nil ((1184 . 1186) (1176 . 1178) (1170 . 1172) (1141 . 1143) (1022 . 1024) (977 . 979) (969 . 971) (955 . 963) (#("      " 0 6 (fontified t)) . 955) (undo-tree-id177 . -2) (938 . 940) (867 . 875) (#("      " 0 6 (fontified t)) . 867) (undo-tree-id178 . -2) (827 . 829) (794 . 796) (786 . 788) (727 . 735) (#("      " 0 6 (fontified t)) . 727) (undo-tree-id179 . -2) (680 . 688) (#("      " 0 6 (fontified t)) . 680) (undo-tree-id180 . -2) (647 . 649) (639 . 641) (614 . 622) (#("      " 0 6 (fontified t)) . 614) (undo-tree-id181 . -2) (579 . 581) (552 . 554) (524 . 526) (516 . 518) (451 . 459) (#("      " 0 6 (fontified t)) . 451) (undo-tree-id182 . -2) (429 . 431) (355 . 357) (253 . 255) (184 . 186) 1134) nil (25361 49897 17280 731000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing fontified t)) . -1180) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) 1188) nil (25361 49897 17266 910000) 0 nil])
([nil nil ((140 . 142) (#("  " 0 2 (fontified nil)) . 139) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (139 . 142) (#("  " 0 2 (fontified nil)) . 138) (138 . 140) (138 . 139) (t 25361 49897 19490 472000)) nil (25361 49927 721233 9000) 0 nil])
([nil nil ((nil rear-nonsticky nil 544 . 545) (nil fontified nil 139 . 545) (139 . 545)) nil (25361 49927 721227 341000) 0 nil])
([nil nil ((564 . 566) (546 . 548) (540 . 542) (474 . 476) (440 . 442) (379 . 381) (314 . 316) (256 . 258) (232 . 234) (209 . 211) (139 . 141) 549) nil (25361 49927 721225 1000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing fontified t)) . -568) (undo-tree-id217 . -2) 571) nil (25361 49927 721218 424000) 0 nil])
([nil nil ((#(": string" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ) after formal parameters" fontified t) 1 2 (fontified t) 2 8 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t)) . 175) (undo-tree-id234 . -2) (undo-tree-id235 . -8) (undo-tree-id236 . -2) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -2) (undo-tree-id240 . -8) (t 25361 49927 727823 407000)) nil (25361 49935 959947 132000) 0 nil])
([nil nil ((#("?: Request" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ) after formal parameters" fontified t) 1 2 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t) 2 3 (fontified t) 3 10 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 181) (undo-tree-id222 . -10) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -1) (undo-tree-id227 . -2) (undo-tree-id228 . -3) (undo-tree-id229 . -1) (undo-tree-id230 . -2) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -10)) nil (25361 49935 959939 886000) 0 nil])
([nil nil ((#("Init" 0 4 (font-lock-face js2-function-param fontified t)) . 181) (undo-tree-id221 . -4)) nil (25361 49935 959926 571000) 0 nil])
([nil nil ((139 . 141) (#("  " 0 2 (fontified nil)) . 138) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (137 . 141) (t 25361 49935 968886 598000)) nil (25361 49953 564822 978000) 0 nil])
([nil nil ((nil rear-nonsticky nil 185 . 186) (nil fontified nil 141 . 186) (141 . 186)) nil (25361 49953 564804 673000) 0 nil])
([nil nil ((186 . 189) (t 25361 49953 571026 109000)) nil (25361 49962 417850 459000) 0 nil])
([nil nil ((nil rear-nonsticky nil 255 . 256) (nil fontified nil 189 . 256) (189 . 256)) nil (25361 49962 417849 25000) 0 nil])
([nil nil ((190 . 192) 256) nil (25361 49962 417846 909000) 0 nil])
([nil nil ((#("  
" 0 2 (face whitespace-trailing fontified t) 2 3 (fontified t)) . 187) (undo-tree-id244 . -2) (undo-tree-id245 . -3) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -3)) nil (25361 49962 417842 318000) 0 nil])
([nil nil ((#("    if (token.value !== null) {
      request.headers.set('Authorization', `token ${token.value}`);
    }
" 0 4 (fontified t) 4 6 (font-lock-face font-lock-keyword-face fontified t) 6 8 (fontified t) 8 13 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'token'" fontified t) 13 14 (fontified t) 14 19 (font-lock-face js2-object-property-access fontified t) 19 24 (fontified t) 24 28 (font-lock-face font-lock-constant-face fontified t) 28 32 (fontified t) 32 46 (fontified t) 46 53 (font-lock-face js2-object-property-access fontified t) 53 54 (fontified t) 54 57 (font-lock-face js2-function-call fontified t) 57 58 (fontified t) 58 73 (font-lock-face font-lock-string-face fontified t) 73 75 (fontified t) 75 84 (font-lock-face font-lock-string-face fontified t) 84 89 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'token'" fontified t) 89 90 (fontified t) 90 95 (font-lock-face js2-object-property-access fontified t) 95 97 (font-lock-face font-lock-string-face fontified t) 97 100 (fontified t) 100 106 (fontified t)) . -534) (undo-tree-id251 . -106) (undo-tree-id252 . -106) (undo-tree-id253 . -106) (undo-tree-id254 . -8) (undo-tree-id255 . -13) (undo-tree-id256 . -84) (undo-tree-id257 . -89) (undo-tree-id258 . -105) (undo-tree-id259 . -105) (undo-tree-id260 . -105) (undo-tree-id261 . -104) (undo-tree-id262 . -105) (undo-tree-id263 . -104) (undo-tree-id264 . -105) (undo-tree-id265 . -104) (undo-tree-id266 . -105) (undo-tree-id267 . -104) (undo-tree-id268 . -105) (undo-tree-id269 . -96) (undo-tree-id270 . -97) (undo-tree-id271 . -96) (undo-tree-id272 . -97) (undo-tree-id273 . -104) (undo-tree-id274 . -105) (undo-tree-id275 . -104) (undo-tree-id276 . -105) (undo-tree-id277 . -95) (undo-tree-id278 . -96) (undo-tree-id279 . -83) (undo-tree-id280 . -84) (undo-tree-id281 . -30) (undo-tree-id282 . -31) (undo-tree-id283 . -104) (undo-tree-id284 . -105) (undo-tree-id285 . -104) (undo-tree-id286 . -105) (undo-tree-id287 . -104) (undo-tree-id288 . -105) (undo-tree-id289 . -104) (undo-tree-id290 . -105) (undo-tree-id291 . -96) (undo-tree-id292 . -97) (undo-tree-id293 . -96) (undo-tree-id294 . -97) (undo-tree-id295 . -104) (undo-tree-id296 . -105) (undo-tree-id297 . -104) (undo-tree-id298 . -105) (undo-tree-id299 . -95) (undo-tree-id300 . -96) (undo-tree-id301 . -83) (undo-tree-id302 . -84) (undo-tree-id303 . -30) (undo-tree-id304 . -31) (undo-tree-id305 . -105) (undo-tree-id306 . -104) (undo-tree-id307 . -105) (undo-tree-id308 . -104) (undo-tree-id309 . -105) (undo-tree-id310 . -104) (undo-tree-id311 . -105) (undo-tree-id312 . -104) (undo-tree-id313 . -105) (undo-tree-id314 . -96) (undo-tree-id315 . -97) (undo-tree-id316 . -96) (undo-tree-id317 . -97) (undo-tree-id318 . -104) (undo-tree-id319 . -105) (undo-tree-id320 . -104) (undo-tree-id321 . -105) (undo-tree-id322 . -95) (undo-tree-id323 . -96) (undo-tree-id324 . -83) (undo-tree-id325 . -84) (undo-tree-id326 . -30) (undo-tree-id327 . -31) (undo-tree-id328 . -105) (undo-tree-id329 . -37) (undo-tree-id330 . -5) (undo-tree-id331 . -4) (undo-tree-id332 . -106) (undo-tree-id333 . -32) (undo-tree-id334 . -100) (undo-tree-id335 . -106) 640 (t 25361 49962 420037 224000)) nil (25361 49995 742456 609000) 0 nil])
([nil nil ((9 . 17) (t 25361 49995 747486 742000)) nil (25361 50003 781037 56000) 0 nil])
([nil nil ((#(": string" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ) after formal parameters" fontified t) 1 2 (fontified t) 2 8 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t)) . 598) (undo-tree-id336 . -2) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -2) (undo-tree-id340 . -8) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -2) (undo-tree-id346 . -8) (t 25361 50003 788239 541000)) nil (25361 50014 491429 548000) 0 nil])
([nil nil ((147 . 149) (#("  " 0 2 (fontified nil)) . 146) (undo-tree-id356 . -2) (undo-tree-id357 . -2) (undo-tree-id358 . -2) (145 . 149) (t 25361 50014 501197 659000)) nil (25361 50048 575978 972000) 0 nil])
([nil nil ((149 . 155)) nil (25361 50048 575975 314000) 0 nil])
([nil nil ((163 . 165) (#("'" 0 1 (fontified nil)) . -163) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (155 . 164)) nil (25361 50048 575974 269000) 0 nil])
([nil nil ((165 . 166)) nil (25361 50048 575971 473000) 0 nil])
([nil nil ((166 . 169)) nil (25361 50048 575970 706000) 0 nil])
([nil nil ((182 . 184) (#("'" 0 1 (fontified nil)) . -182) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (169 . 183)) nil (25361 50048 575969 538000) 0 nil])
([nil nil ((184 . 185)) nil (25361 50048 575966 758000) 0 nil])
([nil nil ((164 . 178)) nil (25361 50048 575966 36000) 0 nil])
([nil nil ((197 . 199)) nil (25361 50048 575965 147000) 0 nil])
([nil nil ((#("id" 0 2 (font-lock-face font-lock-string-face fontified t)) . 197) (undo-tree-id347 . -1) (undo-tree-id348 . -2) (undo-tree-id349 . 2) (undo-tree-id350 . -2) (undo-tree-id351 . -2)) nil (25361 50048 575962 892000) 0 nil])
([nil nil ((197 . 201)) nil (25361 50048 575903 235000) 0 nil])
([nil nil ((#("<IssueSearchResponse" 0 1 (fontified t) 1 20 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'IssueSearchResponse'" fontified t)) . 867) (undo-tree-id359 . -1) (undo-tree-id360 . -20) (undo-tree-id361 . -20) (t 25361 50048 583927 832000)) nil (25361 50055 349287 782000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . 867) (t 25361 50055 356416 439000)) nil (25361 50056 36381 380000) 0 nil])
([nil nil ((626 . 628) (#("  " 0 2 (fontified nil)) . 625) (undo-tree-id362 . -2) (undo-tree-id363 . -2) (undo-tree-id364 . -2) (625 . 628) (#("  " 0 2 (fontified nil)) . 624) (624 . 626) (624 . 625) (t 25361 50056 44465 167000)) nil (25361 50077 667704 744000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1320 . 1321) (nil fontified nil 625 . 1321) (625 . 1321)) nil (25361 50081 818567 970000) 0 nil] [nil nil ((nil rear-nonsticky nil 1320 . 1321) (nil fontified nil 625 . 1321) (625 . 1321)) ((#("function githubFetch(request: Request): Promise<Response> {
  return fetch(request).then(response => {
    if (response.status === 401) {
      token.value = null;
    }
    if (response.status === 403) {
      response.json().then(data => {
        if (data.message === 'Resource not accessible by integration') {
          window.dispatchEvent(new CustomEvent('not-installed'));
        }
      });
    }

    processRateLimit(response);

    if (request.method === 'GET'
      && [401, 403].indexOf(response.status) !== -1
      && request.headers.has('Authorization')
    ) {
      request.headers.delete('Authorization');
      return githubFetch(request);
    }
    return response;
  });
}" 0 8 (font-lock-face font-lock-keyword-face fontified nil) 8 9 (fontified nil) 9 20 (font-lock-face font-lock-function-name-face fontified nil) 20 21 (fontified nil) 21 28 (font-lock-face js2-function-param fontified nil) 28 29 (cursor-sensor-functions (js2-echo-error) help-echo "missing ) after formal parameters" fontified nil) 29 30 (fontified nil) 30 37 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified nil) 37 38 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified nil) 38 39 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified nil) 39 40 (fontified nil) 40 47 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified nil) 47 48 (fontified nil) 48 56 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'Response'" fontified nil) 56 62 (fontified nil) 62 68 (font-lock-face js2-object-property fontified nil) 68 69 (fontified nil) 69 74 (cursor-sensor-functions (js2-echo-error) help-echo "missing : after property id" font-lock-face js2-function-call fontified nil) 74 75 (cursor-sensor-functions (js2-echo-error) help-echo "missing } after property list" fontified nil) 75 82 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'request'" fontified nil) 82 84 (fontified nil) 84 88 (font-lock-face js2-function-call fontified nil) 88 89 (fontified nil) 89 97 (font-lock-face js2-function-param fontified nil) 97 107 (fontified nil) 107 109 (font-lock-face font-lock-keyword-face fontified nil) 109 120 (fontified nil) 120 126 (font-lock-face js2-object-property-access fontified nil) 126 144 (fontified nil) 144 149 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'token'" fontified nil) 149 150 (fontified nil) 150 155 (font-lock-face js2-object-property-access fontified nil) 155 158 (fontified nil) 158 162 (font-lock-face font-lock-constant-face fontified nil) 162 174 (fontified nil) 174 176 (font-lock-face font-lock-keyword-face fontified nil) 176 187 (fontified nil) 187 193 (font-lock-face js2-object-property-access fontified nil) 193 220 (fontified nil) 220 224 (font-lock-face js2-function-call fontified nil) 224 227 (fontified nil) 227 231 (font-lock-face js2-function-call fontified nil) 231 232 (fontified nil) 232 236 (font-lock-face js2-function-param fontified nil) 236 250 (fontified nil) 250 252 (font-lock-face font-lock-keyword-face fontified nil) 252 259 (fontified nil) 259 266 (font-lock-face js2-object-property-access fontified nil) 266 271 (fontified nil) 271 311 (font-lock-face font-lock-string-face fontified nil) 311 332 (fontified nil) 332 345 (font-lock-face js2-function-call fontified nil) 345 346 (fontified nil) 346 349 (font-lock-face font-lock-keyword-face fontified nil) 349 350 (fontified nil) 350 361 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'CustomEvent'" font-lock-face js2-function-call fontified nil) 361 362 (fontified nil) 362 377 (font-lock-face font-lock-string-face fontified nil) 377 412 (fontified nil) 412 428 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'processRateLimit'" font-lock-face js2-function-call fontified nil) 428 445 (fontified nil) 445 447 (font-lock-face font-lock-keyword-face fontified nil) 447 449 (fontified nil) 449 456 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'request'" fontified nil) 456 457 (fontified nil) 457 463 (font-lock-face js2-object-property-access fontified nil) 463 468 (fontified nil) 468 473 (font-lock-face font-lock-string-face fontified nil) 473 494 (fontified nil) 494 500 (font-lock-face js2-function-call fontified nil) 500 501 (font-lock-face js2-function-call fontified nil) 501 511 (fontified nil) 511 517 (font-lock-face js2-object-property-access fontified nil) 517 535 (fontified nil) 535 542 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'request'" fontified nil) 542 543 (fontified nil) 543 550 (font-lock-face js2-object-property-access fontified nil) 550 551 (fontified nil) 551 554 (font-lock-face js2-function-call fontified nil) 554 555 (fontified nil) 555 570 (font-lock-face font-lock-string-face fontified nil) 570 586 (fontified nil) 586 593 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'request'" fontified nil) 593 594 (fontified nil) 594 601 (font-lock-face js2-object-property-access fontified nil) 601 602 (fontified nil) 602 608 (font-lock-face js2-function-call fontified nil) 608 609 (fontified nil) 609 624 (font-lock-face font-lock-string-face fontified nil) 624 633 (fontified nil) 633 639 (font-lock-face font-lock-keyword-face fontified nil) 639 640 (fontified nil) 640 651 (font-lock-face js2-function-call fontified nil) 651 652 (fontified nil) 652 659 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'request'" fontified nil) 659 672 (fontified nil) 672 678 (font-lock-face font-lock-keyword-face fontified nil) 678 689 (fontified nil) 689 694 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified nil) 694 695 (fontified nil) 695 696 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" rear-nonsticky nil fontified nil)) . 625) (undo-tree-id365 . -696) (undo-tree-id366 . -696) (undo-tree-id367 . -695) (undo-tree-id368 . 638) (undo-tree-id369 . -59) (undo-tree-id370 . 637) (undo-tree-id371 . -695) (undo-tree-id372 . 1) (undo-tree-id373 . -696) (undo-tree-id374 . -30) (undo-tree-id375 . -37) (undo-tree-id376 . -48) (undo-tree-id377 . -56) (undo-tree-id378 . -75) (undo-tree-id379 . -82) (undo-tree-id380 . -144) (undo-tree-id381 . -149) (undo-tree-id382 . -350) (undo-tree-id383 . -361) (undo-tree-id384 . -412) (undo-tree-id385 . -428) (undo-tree-id386 . -449) (undo-tree-id387 . -456) (undo-tree-id388 . -535) (undo-tree-id389 . -542) (undo-tree-id390 . -586) (undo-tree-id391 . -593) (undo-tree-id392 . -652) (undo-tree-id393 . -659) (undo-tree-id394 . -695) (undo-tree-id395 . -696) (undo-tree-id396 . -689) (undo-tree-id397 . -694) (undo-tree-id398 . -38) (undo-tree-id399 . -39) (undo-tree-id400 . -37) (undo-tree-id401 . -38) (undo-tree-id402 . -30) (undo-tree-id403 . -37) (undo-tree-id404 . -74) (undo-tree-id405 . -75) (undo-tree-id406 . -69) (undo-tree-id407 . -74) (undo-tree-id408 . -40) (undo-tree-id409 . -47) (undo-tree-id410 . -38) (undo-tree-id411 . -39) (undo-tree-id412 . -38) (undo-tree-id413 . -39) (undo-tree-id414 . -37) (undo-tree-id415 . -38) (undo-tree-id416 . -37) (undo-tree-id417 . -38) (undo-tree-id418 . -28) (undo-tree-id419 . -29) (undo-tree-id420 . -28) (undo-tree-id421 . -29) (undo-tree-id422 . -696) (nil fontified t 1319 . 1320) (nil fontified t 1314 . 1319) (nil fontified t 1303 . 1314) (nil fontified t 1297 . 1303) (nil fontified t 1284 . 1297) (nil fontified t 1277 . 1284) (nil fontified t 1276 . 1277) (nil fontified t 1265 . 1276) (nil fontified t 1264 . 1265) (nil fontified t 1258 . 1264) (nil fontified t 1249 . 1258) (nil fontified t 1234 . 1249) (nil fontified t 1233 . 1234) (nil fontified t 1227 . 1233) (nil fontified t 1226 . 1227) (nil fontified t 1219 . 1226) (nil fontified t 1218 . 1219) (nil fontified t 1211 . 1218) (nil fontified t 1195 . 1211) (nil fontified t 1180 . 1195) (nil fontified t 1179 . 1180) (nil fontified t 1176 . 1179) (nil fontified t 1175 . 1176) (nil fontified t 1168 . 1175) (nil fontified t 1167 . 1168) (nil fontified t 1160 . 1167) (nil fontified t 1142 . 1160) (nil fontified t 1136 . 1142) (nil fontified t 1126 . 1136) (nil fontified t 1125 . 1126) (nil fontified t 1119 . 1125) (nil fontified t 1098 . 1119) (nil fontified t 1093 . 1098) (nil fontified t 1088 . 1093) (nil fontified t 1082 . 1088) (nil fontified t 1081 . 1082) (nil fontified t 1074 . 1081) (nil fontified t 1072 . 1074) (nil fontified t 1070 . 1072) (nil fontified t 1053 . 1070) (nil fontified t 1037 . 1053) (nil fontified t 1002 . 1037) (nil fontified t 987 . 1002) (nil fontified t 986 . 987) (nil fontified t 975 . 986) (nil fontified t 974 . 975) (nil fontified t 971 . 974) (nil fontified t 970 . 971) (nil fontified t 957 . 970) (nil fontified t 936 . 957) (nil fontified t 896 . 936) (nil fontified t 891 . 896) (nil fontified t 884 . 891) (nil fontified t 877 . 884) (nil fontified t 875 . 877) (nil fontified t 861 . 875) (nil fontified t 857 . 861) (nil fontified t 856 . 857) (nil fontified t 852 . 856) (nil fontified t 849 . 852) (nil fontified t 845 . 849) (nil fontified t 818 . 845) (nil fontified t 812 . 818) (nil fontified t 801 . 812) (nil fontified t 799 . 801) (nil fontified t 787 . 799) (nil fontified t 783 . 787) (nil fontified t 780 . 783) (nil fontified t 775 . 780) (nil fontified t 774 . 775) (nil fontified t 769 . 774) (nil fontified t 751 . 769) (nil fontified t 745 . 751) (nil fontified t 734 . 745) (nil fontified t 732 . 734) (nil fontified t 722 . 732) (nil fontified t 714 . 722) (nil fontified t 713 . 714) (nil fontified t 709 . 713) (nil fontified t 707 . 709) (nil fontified t 700 . 707) (nil fontified t 699 . 700) (nil fontified t 694 . 699) (nil fontified t 693 . 694) (nil fontified t 687 . 693) (nil fontified t 681 . 687) (nil fontified t 673 . 681) (nil fontified t 672 . 673) (nil fontified t 665 . 672) (nil fontified t 664 . 665) (nil fontified t 663 . 664) (nil fontified t 662 . 663) (nil fontified t 655 . 662) (nil fontified t 654 . 655) (nil fontified t 653 . 654) (nil fontified t 646 . 653) (nil fontified t 645 . 646) (nil fontified t 634 . 645) (nil fontified t 633 . 634) (nil fontified t 625 . 633) (nil rear-nonsticky t 1320 . 1321)) (25361 50077 667191 381000) 0 nil])
([nil nil ((1371 . 1373) (1365 . 1367) (1344 . 1346) (1336 . 1338) (1295 . 1303) (#("      " 0 6 (fontified t)) . 1295) (undo-tree-id423 . -1) (1246 . 1254) (#("      " 0 6 (fontified t)) . 1246) (undo-tree-id424 . -6) (undo-tree-id425 . -1) (1233 . 1242) (#("    " 0 4 (fontified t)) . 1233) (undo-tree-id426 . -1) (1183 . 1193) (#("      " 0 6 (fontified t)) . 1183) (undo-tree-id427 . -1) (1127 . 1137) (#("      " 0 6 (fontified t)) . 1127) (undo-tree-id428 . -1) (1096 . 1098) (1061 . 1063) (1052 . 1054) (1036 . 1044) (#("      " 0 6 (fontified t)) . 1036) (undo-tree-id429 . -6) (undo-tree-id430 . -1) (1032 . 1034) (966 . 968) (889 . 891) (842 . 850) (#("      " 0 6 (fontified t)) . 842) (undo-tree-id431 . -1) (809 . 811) (801 . 803) (769 . 777) (#("      " 0 6 (fontified t)) . 769) (undo-tree-id432 . -6) (undo-tree-id433 . -1) (736 . 738) (689 . 691) (625 . 627) 621) nil (25361 50081 818563 339000) 0 nil])
nil
([nil nil ((#("  " 0 2 (face whitespace-trailing fontified t)) . -1375) 621) nil (25361 50081 818538 427000) 0 nil])
([nil nil ((#(": Request" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ) after formal parameters" fontified t) 1 2 (fontified t) 2 9 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t)) . 655) (undo-tree-id444 . -2) (undo-tree-id445 . -9) (undo-tree-id446 . -9) (undo-tree-id447 . -2) (undo-tree-id448 . -9) (undo-tree-id449 . -9) (undo-tree-id450 . -9) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -9) (t 25361 50081 830169 426000)) nil (25361 50090 258551 951000) 0 nil])
([nil nil ((#(": Promise<Response>" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t) 1 2 (fontified t) 2 9 (fontified t) 9 10 (fontified t) 10 18 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'Response'" fontified t) 18 19 (fontified t)) . -656) (undo-tree-id434 . -19) (undo-tree-id435 . -19) (undo-tree-id436 . -10) (undo-tree-id437 . -18) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -2) (undo-tree-id441 . -1) (undo-tree-id442 . -19) (undo-tree-id443 . -19) 675) nil (25361 50090 258539 519000) 0 nil])
([nil nil ((#("      if (response.status === 401) {" 0 6 (fontified t) 6 8 (font-lock-face font-lock-keyword-face fontified t) 8 19 (fontified t) 19 25 (font-lock-face js2-object-property-access fontified t) 25 36 (fontified t)) . 704) (undo-tree-id478 . -35) (undo-tree-id479 . -36) (undo-tree-id480 . -31) (undo-tree-id481 . -6) (undo-tree-id482 . -36) (t 25361 50090 270678 528000)) nil (25361 50097 689878 167000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 704) (undo-tree-id476 . -1) (undo-tree-id477 . -1)) nil (25361 50097 689872 734000) 0 nil])
([nil nil ((#("        token.value = null;" 0 8 (fontified t) 8 13 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'token'" fontified t) 13 14 (fontified t) 14 19 (font-lock-face js2-object-property-access fontified t) 19 22 (fontified t) 22 26 (font-lock-face font-lock-constant-face fontified t) 26 27 (fontified t)) . 704) (undo-tree-id472 . -8) (undo-tree-id473 . -13) (undo-tree-id474 . -27) (undo-tree-id475 . -27)) nil (25361 50097 689869 824000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 704) (undo-tree-id470 . -1) (undo-tree-id471 . -1)) nil (25361 50097 689865 480000) 0 nil])
([nil nil ((#("      }" 0 7 (fontified t)) . 704) (undo-tree-id456 . -6) (undo-tree-id457 . -7) (undo-tree-id458 . -6) (undo-tree-id459 . -7) (undo-tree-id460 . -6) (undo-tree-id461 . -7) (undo-tree-id462 . -6) (undo-tree-id463 . -7) (undo-tree-id464 . -6) (undo-tree-id465 . -7) (undo-tree-id466 . -6) (undo-tree-id467 . -7) (undo-tree-id468 . -7) (undo-tree-id469 . -7)) nil (25361 50097 689801 255000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 704) (undo-tree-id454 . -1) (undo-tree-id455 . -1)) nil (25361 50097 689787 367000) 0 nil])
([nil nil ((#("      if (response.status === 403) {
        response.json().then(data => {
          if (data.message === 'Resource not accessible by integration') {
            window.dispatchEvent(new CustomEvent('not-installed'));
          }
        });
      }
" 0 6 (fontified t) 6 8 (font-lock-face font-lock-keyword-face fontified t) 8 19 (fontified t) 19 25 (font-lock-face js2-object-property-access fontified t) 25 37 (fontified t) 37 45 (fontified t) 45 54 (fontified t) 54 58 (font-lock-face js2-function-call fontified t) 58 61 (fontified t) 61 65 (font-lock-face js2-function-call fontified t) 65 66 (fontified t) 66 70 (font-lock-face js2-function-param fontified t) 70 76 (fontified t) 76 86 (fontified t) 86 88 (font-lock-face font-lock-keyword-face fontified t) 88 95 (fontified t) 95 102 (font-lock-face js2-object-property-access fontified t) 102 107 (fontified t) 107 147 (font-lock-face font-lock-string-face fontified t) 147 151 (fontified t) 151 170 (fontified t) 170 183 (font-lock-face js2-function-call fontified t) 183 184 (fontified t) 184 187 (font-lock-face font-lock-keyword-face fontified t) 187 188 (fontified t) 188 199 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'CustomEvent'" font-lock-face js2-function-call fontified t) 199 200 (fontified t) 200 215 (font-lock-face font-lock-string-face fontified t) 215 219 (fontified t) 219 239 (fontified t) 239 243 (fontified t) 243 251 (fontified t)) . -704) (undo-tree-id485 . -251) (undo-tree-id486 . -251) (undo-tree-id487 . -251) (undo-tree-id488 . -188) (undo-tree-id489 . -199) (undo-tree-id490 . -36) (undo-tree-id491 . -107) (undo-tree-id492 . -108) (undo-tree-id493 . -35) (undo-tree-id494 . -107) (undo-tree-id495 . -108) (undo-tree-id496 . -249) (undo-tree-id497 . -250) (undo-tree-id498 . -249) (undo-tree-id499 . -250) (undo-tree-id500 . -249) (undo-tree-id501 . -250) (undo-tree-id502 . -249) (undo-tree-id503 . -250) (undo-tree-id504 . -214) (undo-tree-id505 . -215) (undo-tree-id506 . -214) (undo-tree-id507 . -215) (undo-tree-id508 . -249) (undo-tree-id509 . -250) (undo-tree-id510 . -249) (undo-tree-id511 . -250) (undo-tree-id512 . -239) (undo-tree-id513 . -240) (undo-tree-id514 . -229) (undo-tree-id515 . -230) (undo-tree-id516 . -149) (undo-tree-id517 . -150) (undo-tree-id518 . -74) (undo-tree-id519 . -75) (undo-tree-id520 . -35) (undo-tree-id521 . -36) (undo-tree-id522 . -250) (undo-tree-id523 . -249) (undo-tree-id524 . -250) (undo-tree-id525 . -249) (undo-tree-id526 . -250) (undo-tree-id527 . -249) (undo-tree-id528 . -250) (undo-tree-id529 . -214) (undo-tree-id530 . -215) (undo-tree-id531 . -214) (undo-tree-id532 . -215) (undo-tree-id533 . -249) (undo-tree-id534 . -250) (undo-tree-id535 . -249) (undo-tree-id536 . -250) (undo-tree-id537 . -239) (undo-tree-id538 . -240) (undo-tree-id539 . -229) (undo-tree-id540 . -230) (undo-tree-id541 . -149) (undo-tree-id542 . -150) (undo-tree-id543 . -74) (undo-tree-id544 . -75) (undo-tree-id545 . -35) (undo-tree-id546 . -36) (undo-tree-id547 . -107) (undo-tree-id548 . -108) (undo-tree-id549 . -35) (undo-tree-id550 . -6) (undo-tree-id551 . -251) (undo-tree-id552 . -37) (undo-tree-id553 . -76) (undo-tree-id554 . -151) (undo-tree-id555 . -219) (undo-tree-id556 . -231) (undo-tree-id557 . -243) (undo-tree-id558 . -251) 955 (t 25361 50097 695107 524000)) nil (25361 50108 884064 102000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 704) (undo-tree-id483 . -1) (undo-tree-id484 . -1)) nil (25361 50108 883953 695000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 738) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (t 25361 50108 891722 350000)) nil (25361 50109 995525 779000) 0 nil])
([nil nil ((626 . 628) (#("  " 0 2 (fontified nil)) . 625) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (625 . 628) (#("  " 0 2 (fontified nil)) . 624) (624 . 626) (624 . 625) (t 25361 50110 3781 373000)) nil (25361 50139 757655 237000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1707 . 1708) (nil fontified nil 625 . 1708) (625 . 1708)) nil (25361 50139 757651 597000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1708) (undo-tree-id563 . -1) (undo-tree-id564 . 1) (undo-tree-id565 . -1)) nil (25361 50139 757650 180000) 0 nil])
([nil nil ((1764 . 1766) (1760 . 1762) (1653 . 1655) (1608 . 1610) (1541 . 1543) (1452 . 1454) (1409 . 1411) (1372 . 1374) (1311 . 1313) (1285 . 1287) (1252 . 1254) (1227 . 1229) (1159 . 1161) (1105 . 1107) (1042 . 1044) (972 . 974) (910 . 912) (858 . 860) (852 . 854) (848 . 850) (835 . 837) (800 . 802) (769 . 771) (753 . 755) (746 . 748) (733 . 735) (698 . 700) (667 . 669) (649 . 651) (625 . 627) 624) nil (25361 50139 757645 550000) 0 nil])
([nil nil ((#("  " 0 2 (face whitespace-trailing fontified t)) . -1768) (undo-tree-id561 . 2) (undo-tree-id562 . -2) 624) nil (25361 50139 757636 797000) 0 nil])
([nil nil ((#(": Response" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ) after formal parameters" fontified t) 1 2 (fontified t) 2 10 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t)) . 894) (undo-tree-id569 . -2) (undo-tree-id570 . -10) (undo-tree-id571 . -10) (undo-tree-id572 . -2) (undo-tree-id573 . -10) (undo-tree-id574 . -10) (undo-tree-id575 . -10) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -10) (t 25361 50139 765229 677000)) nil (25361 50144 167369 853000) 0 nil])
([nil nil ((#("      // tslint:disable-next-line:no-console" 0 6 (fontified t) 6 21 (font-lock-face font-lock-comment-face fontified t) 21 44 (font-lock-face font-lock-comment-face fontified t)) . 1594) (undo-tree-id581 . -44) (undo-tree-id582 . -5) (undo-tree-id583 . -6) (undo-tree-id584 . -44) (t 25361 50144 177423 897000)) nil (25361 50175 890575 606000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . 1594) (undo-tree-id579 . -1) (undo-tree-id580 . -1)) nil (25361 50175 890568 548000) 0 nil])
([nil nil ((#("      if (request.method === 'GET'
          && [401, 403].indexOf(response.status) !== -1
          && request.headers.has('Authorization')
         ) {
        request.headers.delete('Authorization');
        return githubFetch(request);
      }
" 0 6 (fontified t) 6 8 (font-lock-face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 17 (fontified t) 17 18 (fontified t) 18 24 (font-lock-face js2-object-property-access fontified t) 24 29 (fontified t) 29 33 (font-lock-face font-lock-string-face fontified t) 33 34 (font-lock-face font-lock-string-face fontified t) 34 35 (fontified t) 35 45 (fontified t) 45 59 (fontified t) 59 65 (font-lock-face js2-function-call fontified t) 65 66 (font-lock-face js2-function-call fontified t) 66 76 (fontified t) 76 82 (font-lock-face js2-object-property-access fontified t) 82 101 (fontified t) 101 104 (fontified t) 104 111 (fontified t) 111 112 (fontified t) 112 119 (font-lock-face js2-object-property-access fontified t) 119 120 (fontified t) 120 123 (font-lock-face js2-function-call fontified t) 123 124 (fontified t) 124 139 (font-lock-face font-lock-string-face fontified t) 139 150 (fontified t) 150 162 (fontified t) 162 169 (fontified t) 169 170 (fontified t) 170 177 (font-lock-face js2-object-property-access fontified t) 177 178 (fontified t) 178 184 (font-lock-face js2-function-call fontified t) 184 185 (fontified t) 185 200 (font-lock-face font-lock-string-face fontified t) 200 211 (fontified t) 211 217 (font-lock-face font-lock-keyword-face fontified t) 217 218 (fontified t) 218 229 (font-lock-face js2-function-call fontified t) 229 230 (fontified t) 230 237 (fontified t) 237 240 (fontified t) 240 248 (fontified t)) . -1827) (undo-tree-id585 . -248) (undo-tree-id586 . -248) (undo-tree-id587 . -248) (undo-tree-id588 . -35) (undo-tree-id589 . -91) (undo-tree-id590 . -141) (undo-tree-id591 . -154) (undo-tree-id592 . -202) (undo-tree-id593 . -153) (undo-tree-id594 . -138) (undo-tree-id595 . -139) (undo-tree-id596 . -139) (undo-tree-id597 . -139) (undo-tree-id598 . -140) (undo-tree-id599 . -139) (undo-tree-id600 . -140) (undo-tree-id601 . -139) (undo-tree-id602 . -140) (undo-tree-id603 . -139) (undo-tree-id604 . -140) (undo-tree-id605 . -138) (undo-tree-id606 . -139) (undo-tree-id607 . -138) (undo-tree-id608 . -139) (undo-tree-id609 . -139) (undo-tree-id610 . -140) (undo-tree-id611 . -139) (undo-tree-id612 . -140) (undo-tree-id613 . -123) (undo-tree-id614 . -124) (undo-tree-id615 . -139) (undo-tree-id616 . -140) (undo-tree-id617 . -139) (undo-tree-id618 . -140) (undo-tree-id619 . -139) (undo-tree-id620 . -140) (undo-tree-id621 . -139) (undo-tree-id622 . -140) (undo-tree-id623 . -138) (undo-tree-id624 . -139) (undo-tree-id625 . -138) (undo-tree-id626 . -139) (undo-tree-id627 . -139) (undo-tree-id628 . -140) (undo-tree-id629 . -139) (undo-tree-id630 . -140) (undo-tree-id631 . -123) (undo-tree-id632 . -124) (undo-tree-id633 . -140) (undo-tree-id634 . -139) (undo-tree-id635 . -140) (undo-tree-id636 . -139) (undo-tree-id637 . -140) (undo-tree-id638 . -139) (undo-tree-id639 . -140) (undo-tree-id640 . -139) (undo-tree-id641 . -140) (undo-tree-id642 . -138) (undo-tree-id643 . -139) (undo-tree-id644 . -138) (undo-tree-id645 . -139) (undo-tree-id646 . -139) (undo-tree-id647 . -140) (undo-tree-id648 . -139) (undo-tree-id649 . -140) (undo-tree-id650 . -123) (undo-tree-id651 . -124) (undo-tree-id652 . -140) (undo-tree-id653 . -153) (undo-tree-id654 . -185) (undo-tree-id655 . -186) (undo-tree-id656 . -152) (undo-tree-id657 . -150) (undo-tree-id658 . -151) (undo-tree-id659 . -150) (undo-tree-id660 . -151) (undo-tree-id661 . -150) (undo-tree-id662 . -151) (undo-tree-id663 . -150) (undo-tree-id664 . -151) (undo-tree-id665 . -138) (undo-tree-id666 . -139) (undo-tree-id667 . -138) (undo-tree-id668 . -139) (undo-tree-id669 . -150) (undo-tree-id670 . -151) (undo-tree-id671 . -150) (undo-tree-id672 . -151) (undo-tree-id673 . -139) (undo-tree-id674 . -140) (undo-tree-id675 . -123) (undo-tree-id676 . -124) (undo-tree-id677 . -82) (undo-tree-id678 . -83) (undo-tree-id679 . -66) (undo-tree-id680 . -67) (undo-tree-id681 . -9) (undo-tree-id682 . -10) (undo-tree-id683 . -151) (undo-tree-id684 . -150) (undo-tree-id685 . -151) (undo-tree-id686 . -150) (undo-tree-id687 . -151) (undo-tree-id688 . -150) (undo-tree-id689 . -151) (undo-tree-id690 . -138) (undo-tree-id691 . -139) (undo-tree-id692 . -138) (undo-tree-id693 . -139) (undo-tree-id694 . -150) (undo-tree-id695 . -151) (undo-tree-id696 . -150) (undo-tree-id697 . -151) (undo-tree-id698 . -139) (undo-tree-id699 . -140) (undo-tree-id700 . -123) (undo-tree-id701 . -124) (undo-tree-id702 . -82) (undo-tree-id703 . -83) (undo-tree-id704 . -66) (undo-tree-id705 . -67) (undo-tree-id706 . -9) (undo-tree-id707 . -10) (undo-tree-id708 . -29) (undo-tree-id709 . -30) (undo-tree-id710 . -9) (undo-tree-id711 . -29) (undo-tree-id712 . -30) (undo-tree-id713 . -150) (undo-tree-id714 . -151) (undo-tree-id715 . -150) (undo-tree-id716 . -151) (undo-tree-id717 . -150) (undo-tree-id718 . -151) (undo-tree-id719 . -150) (undo-tree-id720 . -151) (undo-tree-id721 . -138) (undo-tree-id722 . -139) (undo-tree-id723 . -138) (undo-tree-id724 . -139) (undo-tree-id725 . -150) (undo-tree-id726 . -151) (undo-tree-id727 . -150) (undo-tree-id728 . -151) (undo-tree-id729 . -139) (undo-tree-id730 . -140) (undo-tree-id731 . -123) (undo-tree-id732 . -124) (undo-tree-id733 . -82) (undo-tree-id734 . -83) (undo-tree-id735 . -66) (undo-tree-id736 . -67) (undo-tree-id737 . -9) (undo-tree-id738 . -10) (undo-tree-id739 . -151) (undo-tree-id740 . -101) (undo-tree-id741 . -150) (undo-tree-id742 . -151) (undo-tree-id743 . -150) (undo-tree-id744 . -151) (undo-tree-id745 . -150) (undo-tree-id746 . -151) (undo-tree-id747 . -150) (undo-tree-id748 . -151) (undo-tree-id749 . -138) (undo-tree-id750 . -139) (undo-tree-id751 . -138) (undo-tree-id752 . -139) (undo-tree-id753 . -150) (undo-tree-id754 . -151) (undo-tree-id755 . -150) (undo-tree-id756 . -151) (undo-tree-id757 . -139) (undo-tree-id758 . -140) (undo-tree-id759 . -123) (undo-tree-id760 . -124) (undo-tree-id761 . -82) (undo-tree-id762 . -83) (undo-tree-id763 . -66) (undo-tree-id764 . -67) (undo-tree-id765 . -9) (undo-tree-id766 . -10) (undo-tree-id767 . -151) (undo-tree-id768 . -164) (undo-tree-id769 . -213) (undo-tree-id770 . -246) (undo-tree-id771 . -247) (undo-tree-id772 . -246) (undo-tree-id773 . -247) (undo-tree-id774 . -246) (undo-tree-id775 . -247) (undo-tree-id776 . -246) (undo-tree-id777 . -247) (undo-tree-id778 . -199) (undo-tree-id779 . -200) (undo-tree-id780 . -199) (undo-tree-id781 . -200) (undo-tree-id782 . -246) (undo-tree-id783 . -247) (undo-tree-id784 . -246) (undo-tree-id785 . -247) (undo-tree-id786 . -152) (undo-tree-id787 . -153) (undo-tree-id788 . -247) (undo-tree-id789 . -213) (undo-tree-id790 . -164) (undo-tree-id791 . -150) (undo-tree-id792 . -151) (undo-tree-id793 . -150) (undo-tree-id794 . -151) (undo-tree-id795 . -150) (undo-tree-id796 . -151) (undo-tree-id797 . -150) (undo-tree-id798 . -151) (undo-tree-id799 . -138) (undo-tree-id800 . -139) (undo-tree-id801 . -138) (undo-tree-id802 . -139) (undo-tree-id803 . -150) (undo-tree-id804 . -151) (undo-tree-id805 . -150) (undo-tree-id806 . -151) (undo-tree-id807 . -139) (undo-tree-id808 . -140) (undo-tree-id809 . -123) (undo-tree-id810 . -124) (undo-tree-id811 . -82) (undo-tree-id812 . -83) (undo-tree-id813 . -66) (undo-tree-id814 . -67) (undo-tree-id815 . -9) (undo-tree-id816 . -10) (undo-tree-id817 . -151) (undo-tree-id818 . -101) (undo-tree-id819 . -45) (undo-tree-id820 . -10) (undo-tree-id821 . -6) (undo-tree-id822 . -35) (undo-tree-id823 . -91) (undo-tree-id824 . -35) (undo-tree-id825 . -248) (undo-tree-id826 . -35) (undo-tree-id827 . -91) (undo-tree-id828 . -141) (undo-tree-id829 . -154) (undo-tree-id830 . -203) (undo-tree-id831 . -240) (undo-tree-id832 . -248) 2075 (t 25361 50175 902677 347000)) nil (25361 50325 697885 918000) 0 nil])
([nil nil ((#("        // tslint:disable-next-line:no-console" 0 2 (fontified t) 2 8 (fontified t) 8 46 (font-lock-face font-lock-comment-face fontified t)) . 2375) (undo-tree-id835 . -7) (undo-tree-id836 . -8) (undo-tree-id837 . -46) (t 25361 50325 709904 42000)) nil (25361 50372 251143 111000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2375) (undo-tree-id833 . -1) (undo-tree-id834 . -1)) nil (25361 50372 251136 741000) 0 nil])
([nil nil ((#("      // tslint:disable-next-line:no-console" 0 6 (fontified t) 6 44 (font-lock-face font-lock-comment-face fontified t)) . 2621) (undo-tree-id840 . -31) (undo-tree-id841 . -6) (undo-tree-id842 . -44) (t 25361 50372 262233 330000)) nil (25361 50385 42972 32000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . 2621) (undo-tree-id838 . -1) (undo-tree-id839 . -1)) nil (25361 50385 42965 685000) 0 nil])
([nil nil ((2784 . 2786) (#("  " 0 2 (fontified nil)) . 2783) (undo-tree-id1071 . -2) (undo-tree-id1072 . -2) (undo-tree-id1073 . -2) (2782 . 2786) (t 25361 50385 54281 777000)) nil (25361 50504 981390 909000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3526 . 3527) (nil fontified nil 2784 . 3527) (2784 . 3527)) nil (25361 50504 981386 359000) 0 nil])
([nil nil ((#("
export function createIssue(issueTerm: string, documentUrl: string, title: string, description: string, label: string) {
  const url = `${UTTERANCES_API}/repos/${owner}/${repo}/issues${label ? `?label=${encodeURIComponent(label)}` : ''}`;
  const request = new Request(url, {
    method: 'POST',
    body: JSON.stringify({
      title: issueTerm,
      body: `# ${title}\\n\\n${description}\\n\\n[${documentUrl}](${documentUrl})`
    })
  });
  request.headers.set('Accept', GITHUB_ENCODING__REST_V3);
  request.headers.set('Authorization', `token ${token.value}`);
  return fetch(request).then<Issue>(response => {
    if (!response.ok) {
      throw new Error('Error creating comments container issue');
    }
    return response.json();
  });
}  
" 0 1 (fontified t) 1 7 (cursor-sensor-functions (js2-echo-error) help-echo "SyntaxError: export declarations may only appear at top level" font-lock-face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (font-lock-face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 28 (font-lock-face font-lock-function-name-face fontified t) 28 29 (fontified t) 29 38 (font-lock-face js2-function-param fontified t) 38 39 (cursor-sensor-functions (js2-echo-error) help-echo "missing ) after formal parameters" fontified t) 39 40 (fontified t) 40 46 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t) 46 48 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t) 48 59 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t) 59 60 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 60 61 (fontified t) 61 67 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 67 69 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t) 69 74 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" fontified t) 74 75 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 75 76 (fontified t) 76 81 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 81 82 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t) 82 84 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" face (whitespace-line) fontified t) 84 95 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" face (whitespace-line) fontified t) 95 96 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t) 96 97 (face (whitespace-line) fontified t) 97 103 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t) 103 105 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" face (whitespace-line) fontified t) 105 110 (cursor-sensor-functions (js2-echo-error) help-echo "Code has no side effects" face (whitespace-line) fontified t) 110 111 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t) 111 112 (face (whitespace-line) fontified t) 112 118 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t) 118 119 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t) 119 120 (face (whitespace-line) fontified t) 120 121 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t) 121 124 (fontified t) 124 129 (font-lock-face font-lock-keyword-face fontified t) 129 130 (fontified t) 130 133 (font-lock-face font-lock-variable-name-face fontified t) 133 136 (fontified t) 136 139 (font-lock-face font-lock-string-face fontified t) 139 153 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'UTTERANCES_API'" fontified t) 153 163 (font-lock-face font-lock-string-face fontified t) 163 168 (fontified t) 168 172 (font-lock-face font-lock-string-face fontified t) 172 176 (fontified t) 176 186 (font-lock-face font-lock-string-face fontified t) 186 191 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'label'" fontified t) 191 194 (fontified t) 194 202 (font-lock-face font-lock-string-face fontified t) 202 204 (font-lock-face font-lock-string-face face (whitespace-line) fontified t) 204 222 (font-lock-face font-lock-builtin-face face (whitespace-line) fontified t) 222 223 (face (whitespace-line) fontified t) 223 228 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'label'" face (whitespace-line) fontified t) 228 229 (face (whitespace-line) fontified t) 229 231 (font-lock-face font-lock-string-face face (whitespace-line) fontified t) 231 234 (face (whitespace-line) fontified t) 234 236 (font-lock-face font-lock-string-face face (whitespace-line) fontified t) 236 238 (font-lock-face font-lock-string-face face (whitespace-line) fontified t) 238 239 (face (whitespace-line) fontified t) 239 242 (fontified t) 242 247 (font-lock-face font-lock-keyword-face fontified t) 247 248 (fontified t) 248 255 (font-lock-face font-lock-variable-name-face fontified t) 255 258 (fontified t) 258 261 (font-lock-face font-lock-keyword-face fontified t) 261 262 (fontified t) 262 269 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'Request'" font-lock-face js2-function-call fontified t) 269 281 (fontified t) 281 287 (font-lock-face js2-object-property fontified t) 287 289 (fontified t) 289 295 (font-lock-face font-lock-string-face fontified t) 295 301 (fontified t) 301 305 (font-lock-face js2-object-property fontified t) 305 312 (fontified t) 312 321 (font-lock-face js2-function-call fontified t) 321 330 (fontified t) 330 335 (font-lock-face js2-object-property fontified t) 335 337 (fontified t) 337 346 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'issueTerm'" fontified t) 346 354 (fontified t) 354 358 (font-lock-face js2-object-property fontified t) 358 360 (fontified t) 360 365 (font-lock-face font-lock-string-face fontified t) 365 370 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'title'" fontified t) 370 377 (font-lock-face font-lock-string-face fontified t) 377 388 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'description'" fontified t) 388 396 (font-lock-face font-lock-string-face fontified t) 396 407 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'documentUrl'" fontified t) 407 412 (font-lock-face font-lock-string-face fontified t) 412 423 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'documentUrl'" fontified t) 423 426 (font-lock-face font-lock-string-face fontified t) 426 450 (fontified t) 450 457 (font-lock-face js2-object-property-access fontified t) 457 458 (fontified t) 458 461 (font-lock-face js2-function-call fontified t) 461 462 (fontified t) 462 470 (font-lock-face font-lock-string-face fontified t) 470 501 (fontified t) 501 509 (fontified t) 509 516 (font-lock-face js2-object-property-access fontified t) 516 517 (fontified t) 517 520 (font-lock-face js2-function-call fontified t) 520 521 (fontified t) 521 536 (font-lock-face font-lock-string-face fontified t) 536 538 (fontified t) 538 547 (font-lock-face font-lock-string-face fontified t) 547 552 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'token'" fontified t) 552 553 (fontified t) 553 558 (font-lock-face js2-object-property-access fontified t) 558 560 (font-lock-face font-lock-string-face fontified t) 560 565 (fontified t) 565 571 (font-lock-face font-lock-keyword-face fontified t) 571 572 (fontified t) 572 577 (font-lock-face js2-function-call fontified t) 577 587 (fontified t) 587 591 (font-lock-face js2-object-property-access fontified t) 591 592 (fontified t) 592 597 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'Issue'" fontified t) 597 599 (fontified t) 599 607 (font-lock-face js2-function-param fontified t) 607 617 (fontified t) 617 619 (font-lock-face font-lock-keyword-face fontified t) 619 621 (fontified t) 621 622 (font-lock-face font-lock-negation-char-face fontified t) 622 631 (fontified t) 631 633 (font-lock-face js2-object-property-access fontified t) 633 643 (fontified t) 643 648 (font-lock-face font-lock-keyword-face fontified t) 648 649 (fontified t) 649 652 (font-lock-face font-lock-keyword-face fontified t) 652 653 (fontified t) 653 658 (font-lock-face js2-function-call fontified t) 658 659 (fontified t) 659 700 (font-lock-face font-lock-string-face fontified t) 700 713 (fontified t) 713 719 (font-lock-face font-lock-keyword-face fontified t) 719 729 (fontified t) 729 733 (font-lock-face js2-function-call fontified t) 733 743 (fontified t) 743 744 (rear-nonsticky t fontified t) 744 746 (face whitespace-trailing fontified t) 746 747 (rear-nonsticky t fontified t)) . -2783) (undo-tree-id843 . -747) (undo-tree-id844 . -747) (undo-tree-id845 . -747) (undo-tree-id846 . 747) (undo-tree-id847 . -746) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -499) (undo-tree-id851 . -501) (undo-tree-id852 . -744) (undo-tree-id853 . -743) (undo-tree-id854 . -744) (undo-tree-id855 . -743) (undo-tree-id856 . -744) (undo-tree-id857 . -743) (undo-tree-id858 . -744) (undo-tree-id859 . -743) (undo-tree-id860 . -744) (undo-tree-id861 . -699) (undo-tree-id862 . -700) (undo-tree-id863 . -699) (undo-tree-id864 . -700) (undo-tree-id865 . -743) (undo-tree-id866 . -744) (undo-tree-id867 . -743) (undo-tree-id868 . -744) (undo-tree-id869 . -739) (undo-tree-id870 . -740) (undo-tree-id871 . -707) (undo-tree-id872 . -708) (undo-tree-id873 . -635) (undo-tree-id874 . -636) (undo-tree-id875 . -611) (undo-tree-id876 . -612) (undo-tree-id877 . -558) (undo-tree-id878 . -559) (undo-tree-id879 . -546) (undo-tree-id880 . -547) (undo-tree-id881 . -436) (undo-tree-id882 . -437) (undo-tree-id883 . -431) (undo-tree-id884 . -432) (undo-tree-id885 . -423) (undo-tree-id886 . -424) (undo-tree-id887 . -411) (undo-tree-id888 . -412) (undo-tree-id889 . -407) (undo-tree-id890 . -408) (undo-tree-id891 . -395) (undo-tree-id892 . -396) (undo-tree-id893 . -388) (undo-tree-id894 . -389) (undo-tree-id895 . -376) (undo-tree-id896 . -377) (undo-tree-id897 . -370) (undo-tree-id898 . -371) (undo-tree-id899 . -364) (undo-tree-id900 . -365) (undo-tree-id901 . -322) (undo-tree-id902 . -323) (undo-tree-id903 . -275) (undo-tree-id904 . -276) (undo-tree-id905 . -236) (undo-tree-id906 . -237) (undo-tree-id907 . -229) (undo-tree-id908 . -230) (undo-tree-id909 . -203) (undo-tree-id910 . -204) (undo-tree-id911 . -185) (undo-tree-id912 . -186) (undo-tree-id913 . -176) (undo-tree-id914 . -177) (undo-tree-id915 . -171) (undo-tree-id916 . -172) (undo-tree-id917 . -168) (undo-tree-id918 . -169) (undo-tree-id919 . -162) (undo-tree-id920 . -163) (undo-tree-id921 . -153) (undo-tree-id922 . -154) (undo-tree-id923 . -138) (undo-tree-id924 . -139) (undo-tree-id925 . -120) (undo-tree-id926 . -121) (undo-tree-id927 . -40) (undo-tree-id928 . -46) (undo-tree-id929 . -48) (undo-tree-id930 . -59) (undo-tree-id931 . -61) (undo-tree-id932 . -67) (undo-tree-id933 . -69) (undo-tree-id934 . -74) (undo-tree-id935 . -76) (undo-tree-id936 . -82) (undo-tree-id937 . -84) (undo-tree-id938 . -95) (undo-tree-id939 . -97) (undo-tree-id940 . -103) (undo-tree-id941 . -105) (undo-tree-id942 . -110) (undo-tree-id943 . -112) (undo-tree-id944 . -118) (undo-tree-id945 . -139) (undo-tree-id946 . -153) (undo-tree-id947 . -186) (undo-tree-id948 . -191) (undo-tree-id949 . -223) (undo-tree-id950 . -228) (undo-tree-id951 . -262) (undo-tree-id952 . -269) (undo-tree-id953 . -337) (undo-tree-id954 . -346) (undo-tree-id955 . -365) (undo-tree-id956 . -370) (undo-tree-id957 . -377) (undo-tree-id958 . -388) (undo-tree-id959 . -396) (undo-tree-id960 . -407) (undo-tree-id961 . -412) (undo-tree-id962 . -423) (undo-tree-id963 . -547) (undo-tree-id964 . -552) (undo-tree-id965 . -592) (undo-tree-id966 . -597) (undo-tree-id967 . -118) (undo-tree-id968 . -119) (undo-tree-id969 . -112) (undo-tree-id970 . -118) (undo-tree-id971 . -110) (undo-tree-id972 . -111) (undo-tree-id973 . -97) (undo-tree-id974 . -111) (undo-tree-id975 . -95) (undo-tree-id976 . -96) (undo-tree-id977 . -76) (undo-tree-id978 . -96) (undo-tree-id979 . -74) (undo-tree-id980 . -75) (undo-tree-id981 . -61) (undo-tree-id982 . -75) (undo-tree-id983 . -59) (undo-tree-id984 . -60) (undo-tree-id985 . -40) (undo-tree-id986 . -60) (undo-tree-id987 . -120) (undo-tree-id988 . -121) (undo-tree-id989 . -118) (undo-tree-id990 . -119) (undo-tree-id991 . -118) (undo-tree-id992 . -119) (undo-tree-id993 . -112) (undo-tree-id994 . -118) (undo-tree-id995 . -110) (undo-tree-id996 . -111) (undo-tree-id997 . -110) (undo-tree-id998 . -111) (undo-tree-id999 . -97) (undo-tree-id1000 . -103) (undo-tree-id1001 . -95) (undo-tree-id1002 . -96) (undo-tree-id1003 . -95) (undo-tree-id1004 . -96) (undo-tree-id1005 . -76) (undo-tree-id1006 . -82) (undo-tree-id1007 . -74) (undo-tree-id1008 . -75) (undo-tree-id1009 . -74) (undo-tree-id1010 . -75) (undo-tree-id1011 . -61) (undo-tree-id1012 . -67) (undo-tree-id1013 . -59) (undo-tree-id1014 . -60) (undo-tree-id1015 . -59) (undo-tree-id1016 . -60) (undo-tree-id1017 . -38) (undo-tree-id1018 . -39) (undo-tree-id1019 . -38) (undo-tree-id1020 . -39) (undo-tree-id1021 . -1) (undo-tree-id1022 . -7) (undo-tree-id1023 . -744) (undo-tree-id1024 . -1) (undo-tree-id1025 . -744) (undo-tree-id1026 . -744) (undo-tree-id1027 . -738) (undo-tree-id1028 . -710) (undo-tree-id1029 . -704) (undo-tree-id1030 . -638) (undo-tree-id1031 . -614) (undo-tree-id1032 . -564) (undo-tree-id1033 . -500) (undo-tree-id1034 . -441) (undo-tree-id1035 . -435) (undo-tree-id1036 . -428) (undo-tree-id1037 . -349) (undo-tree-id1038 . -325) (undo-tree-id1039 . -298) (undo-tree-id1040 . -278) (undo-tree-id1041 . -241) (undo-tree-id1042 . -222) (undo-tree-id1043 . -123) (undo-tree-id1044 . -101) (undo-tree-id1045 . -2) (undo-tree-id1046 . -2) (undo-tree-id1047 . -2) (undo-tree-id1048 . -744) (undo-tree-id1049 . -747) (undo-tree-id1050 . -1) (undo-tree-id1051 . -100) (undo-tree-id1052 . -122) (undo-tree-id1053 . -221) (undo-tree-id1054 . -240) (undo-tree-id1055 . -277) (undo-tree-id1056 . -297) (undo-tree-id1057 . -324) (undo-tree-id1058 . -348) (undo-tree-id1059 . -427) (undo-tree-id1060 . -434) (undo-tree-id1061 . -440) (undo-tree-id1062 . -499) (undo-tree-id1063 . -563) (undo-tree-id1064 . -613) (undo-tree-id1065 . -637) (undo-tree-id1066 . -703) (undo-tree-id1067 . -709) (undo-tree-id1068 . -737) (undo-tree-id1069 . -743) (undo-tree-id1070 . -747) 3530) nil (25361 50504 981372 666000) 0 nil])
([nil nil ((2784 . 2786) (#("  " 0 2 (fontified nil)) . 2783) (2783 . 2785) (2783 . 2784) (t 25361 50504 990034 405000)) nil (25361 50613 190291 709000) 0 nil])
([nil nil ((2786 . 2790)) nil (25361 50613 190290 280000) 0 nil])
([nil nil ((#("load" 0 4 (fontified t)) . 2786) (undo-tree-id1189 . -1) (undo-tree-id1190 . -2) (undo-tree-id1191 . -3) (undo-tree-id1192 . -4) (undo-tree-id1193 . -4)) nil (25361 50613 190289 126000) 0 nil])
([nil nil ((2786 . 2795)) nil (25361 50613 190284 599000) 0 nil])
([nil nil ((2795 . 2797) (#(" " 0 1 (fontified nil)) . 2794) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (2795 . 2796)) nil (25361 50613 190283 440000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2884 . 2885) (nil fontified nil 2797 . 2885) (2797 . 2885)) nil (25361 50613 190280 508000) 0 nil])
([nil nil ((#("function" 0 8 (font-lock-face font-lock-keyword-face fontified t)) . 2786) (undo-tree-id1176 . -1) (undo-tree-id1177 . -2) (undo-tree-id1178 . -3) (undo-tree-id1179 . -4) (undo-tree-id1180 . -5) (undo-tree-id1181 . -6) (undo-tree-id1182 . -7) (undo-tree-id1183 . -8) (undo-tree-id1184 . -8) (undo-tree-id1185 . -8)) nil (25361 50613 190278 411000) 0 nil])
([nil nil ((#("  
" 0 2 (face whitespace-trailing fontified t) 2 3 (fontified t)) . 2784) (undo-tree-id1154 . -3) (undo-tree-id1155 . -2) (undo-tree-id1156 . -2) (undo-tree-id1157 . -2) (undo-tree-id1158 . -2) (undo-tree-id1159 . -2) (undo-tree-id1160 . -2) (undo-tree-id1161 . -2) (undo-tree-id1162 . -2) (undo-tree-id1163 . -2) (undo-tree-id1164 . -2) (undo-tree-id1165 . -2) (undo-tree-id1166 . -2) (undo-tree-id1167 . -2) (undo-tree-id1168 . -2) (undo-tree-id1169 . -2) (undo-tree-id1170 . -2) (undo-tree-id1171 . 1) (undo-tree-id1172 . -3) (undo-tree-id1173 . -2) (undo-tree-id1174 . -2) (undo-tree-id1175 . -3)) nil (25361 50613 190041 343000) 0 nil])
([nil nil ((2872 . 2874) 2874) nil (25361 50613 190024 133000) 0 nil])
([nil nil ((2876 . 2877)) nil (25361 50613 190022 952000) 0 nil])
([nil nil ((#("function() {
    console.log('All assets are loaded')
  }" 0 8 (font-lock-face font-lock-keyword-face fontified t) 8 13 (fontified t) 13 17 (fontified t) 17 25 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 25 28 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face js2-function-call fontified t) 28 29 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 29 52 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-string-face fontified t) 52 53 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 53 54 (fontified t) 54 56 (fontified t) 56 57 (fontified t)) . -2818) (undo-tree-id1077 . -57) (undo-tree-id1078 . -57) (undo-tree-id1079 . -54) (undo-tree-id1080 . -57) (undo-tree-id1081 . -57) (undo-tree-id1082 . -57) (undo-tree-id1083 . -57) (undo-tree-id1084 . -51) (undo-tree-id1085 . -52) (undo-tree-id1086 . -51) (undo-tree-id1087 . -52) (undo-tree-id1088 . -57) (undo-tree-id1089 . -57) (undo-tree-id1090 . -52) (undo-tree-id1091 . -53) (undo-tree-id1092 . -28) (undo-tree-id1093 . -29) (undo-tree-id1094 . -9) (undo-tree-id1095 . -10) (undo-tree-id1096 . -8) (undo-tree-id1097 . -9) (undo-tree-id1098 . -15) (undo-tree-id1099 . -15) (undo-tree-id1100 . -17) (undo-tree-id1101 . -57) (undo-tree-id1102 . -57) (undo-tree-id1103 . -57) (undo-tree-id1104 . -57) (undo-tree-id1105 . -51) (undo-tree-id1106 . -52) (undo-tree-id1107 . -51) (undo-tree-id1108 . -52) (undo-tree-id1109 . -57) (undo-tree-id1110 . -57) (undo-tree-id1111 . -52) (undo-tree-id1112 . -53) (undo-tree-id1113 . -28) (undo-tree-id1114 . -29) (undo-tree-id1115 . -9) (undo-tree-id1116 . -10) (undo-tree-id1117 . -8) (undo-tree-id1118 . -9) (undo-tree-id1119 . -17) (undo-tree-id1120 . -53) (undo-tree-id1121 . -18) (undo-tree-id1122 . -12) (undo-tree-id1123 . -8) (undo-tree-id1124 . -57) (undo-tree-id1125 . -47) (undo-tree-id1126 . -56) (undo-tree-id1127 . -56) (undo-tree-id1128 . -57) (undo-tree-id1129 . -56) (undo-tree-id1130 . -57) (undo-tree-id1131 . -56) (undo-tree-id1132 . -57) (undo-tree-id1133 . -56) (undo-tree-id1134 . -57) (undo-tree-id1135 . -51) (undo-tree-id1136 . -52) (undo-tree-id1137 . -51) (undo-tree-id1138 . -52) (undo-tree-id1139 . -56) (undo-tree-id1140 . -57) (undo-tree-id1141 . -56) (undo-tree-id1142 . -57) (undo-tree-id1143 . -11) (undo-tree-id1144 . -12) (undo-tree-id1145 . 46) (undo-tree-id1146 . -12) (undo-tree-id1147 . 45) (undo-tree-id1148 . -56) (undo-tree-id1149 . 1) (undo-tree-id1150 . -57) (undo-tree-id1151 . -57) (undo-tree-id1152 . -56) (undo-tree-id1153 . -57) 2875) nil (25361 50613 190018 658000) 0 nil])
([nil nil ((2818 . 2827)) nil (25361 50613 189966 697000) 0 nil])
([nil nil ((2827 . 2840)) nil (25361 50613 189965 825000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -2839) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) 2840) nil (25361 50613 189963 812000) 0 nil])
([nil nil ((2839 . 2842)) nil (25361 50613 189950 290000) 0 nil])
([nil nil ((2784 . 2786) (#("  " 0 2 (fontified nil)) . 2783) (undo-tree-id1234 . -2) (undo-tree-id1235 . -2) (undo-tree-id1236 . -2) (2782 . 2786) (t 25361 50613 197008 758000)) nil (25361 50762 237432 968000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 2796) (undo-tree-id1231 . -1) (2795 . 2796) (2794 . 2796) (#("(" 0 1 (fontified nil)) . -2794) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (2786 . 2795)) nil (25361 50762 237428 702000) 0 nil])
([nil nil ((#("i" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face js2-function-call fontified nil)) . 2793) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (2792 . 2793) (#("o" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face js2-function-call fontified nil)) . 2791) (2792 . 2793)) nil (25361 50762 237424 376000) 0 nil])
([nil nil ((2794 . 2795)) nil (25361 50762 237421 304000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2818 . 2819) (nil help-echo "Undeclared variable or function 'populateManualCommenting'" 2795 . 2819) (nil fontified nil 2795 . 2819) (2795 . 2819)) nil (25361 50762 237419 942000) 0 nil])
([nil nil ((2822 . 2824) (#("{" 0 1 (fontified nil)) . -2822) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (2821 . 2823)) nil (25361 50762 237418 335000) 0 nil])
([nil nil ((2823 . 2826)) nil (25361 50762 237415 534000) 0 nil])
([nil nil ((2823 . 2828)) nil (25361 50762 237414 688000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 2845) (undo-tree-id1224 . -1) (2844 . 2845) (2843 . 2845) (#("(" 0 1 (fontified nil)) . -2843) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (2828 . 2844)) nil (25361 50762 237413 304000) 0 nil])
([nil nil ((2823 . 2828)) nil (25361 50762 237409 505000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2919 . 2920) (nil fontified nil 2828 . 2920) (2828 . 2920)) nil (25361 50762 237408 618000) 0 nil])
([nil nil ((2828 . 2832)) nil (25361 50762 237407 461000) 0 nil])
([nil nil ((2823 . 2828)) nil (25361 50762 237406 714000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2863 . 2864) (nil fontified nil 2828 . 2864) (2828 . 2864)) nil (25361 50762 237405 790000) 0 nil])
([nil nil ((#("    
" 0 4 (face whitespace-trailing fontified t) 4 5 (fontified t)) . 2824) (undo-tree-id1216 . -4) (undo-tree-id1217 . -5) (undo-tree-id1218 . -4) (undo-tree-id1219 . -4) (undo-tree-id1220 . -4) (undo-tree-id1221 . -4) (undo-tree-id1222 . -4) (undo-tree-id1223 . -5)) nil (25361 50762 237404 15000) 0 nil])
([nil nil ((2824 . 2828)) nil (25361 50762 423139 186000) 0 nil])
([nil nil ((#("let" 0 3 (font-lock-face font-lock-keyword-face fontified t)) . 2868) (undo-tree-id1282 . -3)) nil (25361 50782 20463 601000) 0 nil] [nil nil ((#("    const url = new URL(location.href);" 0 4 (fontified t) 4 9 (font-lock-face font-lock-keyword-face fontified t) 9 10 (fontified t) 10 13 (font-lock-face font-lock-variable-name-face fontified t) 13 16 (fontified t) 16 19 (font-lock-face font-lock-keyword-face fontified t) 19 20 (fontified t) 20 23 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'URL'" font-lock-face js2-function-call fontified t) 23 33 (fontified t) 33 37 (font-lock-face js2-object-property-access fontified t) 37 38 (fontified t) 38 39 (rear-nonsticky t fontified t)) . 2824) (undo-tree-id1211 . -39) (undo-tree-id1212 . -20) (undo-tree-id1213 . -23) (undo-tree-id1214 . -4) (undo-tree-id1215 . -39)) ((2824 . 2863)) (25361 50762 237658 635000) 0 nil])
([nil nil ((2868 . 2873)) nil (25361 50789 238529 276000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -2823) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . 1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) 2824) ((2823 . 2824)) (25361 50762 237386 69000) 0 nil])
([nil nil ((#("const url = new URL(location.href);
    const pathname = url.pathname.length < 2 ? 'index' : url.pathname.substr(1).replace(/\\.\\w+$/, '');" 0 5 (font-lock-face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 9 (font-lock-face font-lock-variable-name-face fontified t) 9 12 (fontified t) 12 15 (font-lock-face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 19 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'URL'" font-lock-face js2-function-call fontified t) 19 29 (fontified t) 29 33 (font-lock-face js2-object-property-access fontified t) 33 34 (fontified t) 34 35 (rear-nonsticky t fontified t) 35 36 (fontified t) 36 40 (fontified t) 40 45 (font-lock-face font-lock-keyword-face fontified t) 45 46 (fontified t) 46 54 (font-lock-face font-lock-variable-name-face fontified t) 54 57 (fontified t) 57 60 (fontified t) 60 61 (fontified t) 61 69 (font-lock-face js2-object-property-access fontified t) 69 70 (fontified t) 70 76 (font-lock-face js2-object-property-access fontified t) 76 83 (fontified t) 83 90 (font-lock-face font-lock-string-face fontified t) 90 93 (fontified t) 93 96 (fontified t) 96 97 (fontified t) 97 105 (font-lock-face js2-object-property-access fontified t) 105 106 (fontified t) 106 112 (font-lock-face js2-function-call fontified t) 112 116 (fontified t) 116 117 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 117 118 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 118 119 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 119 120 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 120 121 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 121 122 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 122 123 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 123 124 (face (whitespace-line) fontified t) 124 125 (syntax-table (7 . 47) font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 125 131 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 131 132 (syntax-table (7 . 47) font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 132 134 (face (whitespace-line) fontified t) 134 136 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 136 137 (face (whitespace-line) fontified t) 137 138 (face (whitespace-line) rear-nonsticky t fontified t)) . 2828) (undo-tree-id1327 . -138) (undo-tree-id1328 . -36) (undo-tree-id1329 . -40) (undo-tree-id1330 . -35) (undo-tree-id1331 . -40) (undo-tree-id1332 . -36) (undo-tree-id1333 . -40) (undo-tree-id1334 . -40) (undo-tree-id1335 . -41) (undo-tree-id1336 . -42) (undo-tree-id1337 . -43) (undo-tree-id1338 . -44) (undo-tree-id1339 . -45) (undo-tree-id1340 . -5) (undo-tree-id1341 . -40) (undo-tree-id1342 . -138) (undo-tree-id1343 . -138) (undo-tree-id1344 . -138) (undo-tree-id1345 . -36) (undo-tree-id1346 . -138) (undo-tree-id1347 . -138) (undo-tree-id1348 . -16) (undo-tree-id1349 . -19) (undo-tree-id1350 . -138)) ((2828 . 2966)) (25361 50793 181206 569000) 0 nil])
nil
([nil nil ((205 . 207) (#("  " 0 2 (fontified nil)) . 204) (203 . 207)) ((#("
  
" 0 1 (fontified t) 1 3 (fontified nil) 3 4 (fontified nil)) . 203) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (undo-tree-id1321 . -4) (undo-tree-id1322 . -4) (undo-tree-id1323 . -4) (undo-tree-id1324 . -4) (undo-tree-id1325 . -1) (undo-tree-id1326 . -3) (204 . 206) (#("  " 0 2 (face whitespace-trailing fontified t)) . 205)) (25361 50793 601668 914000) 0 nil])
([nil nil ((nil rear-nonsticky nil 318 . 319) (nil fontified nil 205 . 210) (nil fontified nil 210 . 211) (nil fontified nil 211 . 221) (nil fontified nil 221 . 224) (nil fontified nil 224 . 249) (nil fontified nil 249 . 251) (205 . 319)) ((#("const GITHUB_API = 'https://api.github.com/';
  const GITHUB_ENCODING__REST_V3 = 'application/vnd.github.v3+json';" 0 5 (font-lock-face font-lock-keyword-face fontified nil) 5 6 (fontified nil) 6 16 (font-lock-face font-lock-variable-name-face fontified nil) 16 19 (fontified nil) 19 44 (font-lock-face font-lock-string-face fontified nil) 44 46 (fontified nil) 46 48 (fontified nil) 48 53 (font-lock-face font-lock-keyword-face fontified nil) 53 54 (fontified nil) 54 78 (font-lock-face font-lock-variable-name-face fontified nil) 78 81 (fontified nil) 81 113 (font-lock-face font-lock-string-face fontified nil) 113 114 (rear-nonsticky nil fontified nil)) . 205) (undo-tree-id1302 . -45) (undo-tree-id1303 . -46) (undo-tree-id1304 . -45) (undo-tree-id1305 . -45) (undo-tree-id1306 . -45) (undo-tree-id1307 . 6) (undo-tree-id1308 . -112) (undo-tree-id1309 . -45) (undo-tree-id1310 . -45) (nil fontified t 249 . 251) (nil fontified t 224 . 249) (nil fontified t 221 . 224) (nil fontified t 211 . 221) (nil fontified t 210 . 211) (nil fontified t 205 . 210) (nil rear-nonsticky t 318 . 319)) (25361 50794 116661 957000) 0 nil] [nil nil ((nil fontified nil 342 . 343) (nil fontified nil 341 . 342) (nil font-lock-face font-lock-string-face 339 . 341) (nil fontified nil 339 . 341) (nil fontified nil 337 . 339) (nil font-lock-face font-lock-string-face 336 . 337) (nil fontified nil 336 . 337) (nil font-lock-face font-lock-string-face 330 . 336) (nil fontified nil 330 . 336) (nil font-lock-face font-lock-string-face 329 . 330) (nil fontified nil 329 . 330) (nil fontified nil 328 . 329) (nil font-lock-face js2-function-call 327 . 328) (nil fontified nil 327 . 328) (nil font-lock-face js2-function-call 326 . 327) (nil fontified nil 326 . 327) (nil font-lock-face js2-function-call 325 . 326) (nil fontified nil 325 . 326) (nil font-lock-face js2-function-call 324 . 325) (nil fontified nil 324 . 325) (nil font-lock-face js2-function-call 323 . 324) (nil fontified nil 323 . 324) (nil font-lock-face js2-function-call 322 . 323) (nil fontified nil 322 . 323) (nil font-lock-face js2-function-call 321 . 322) (nil fontified nil 321 . 322) (nil fontified nil 317 . 321) (nil font-lock-face js2-function-call 311 . 317) (nil fontified nil 311 . 317) (nil fontified nil 310 . 311) (nil font-lock-face js2-object-property-access 302 . 310) (nil fontified nil 302 . 310) (nil fontified nil 301 . 302) (nil fontified nil 298 . 301) (nil fontified nil 295 . 298) (nil font-lock-face font-lock-string-face 288 . 295) (nil fontified nil 288 . 295) (nil fontified nil 281 . 288) (nil font-lock-face js2-object-property-access 275 . 281) (nil fontified nil 275 . 281) (nil fontified nil 274 . 275) (nil font-lock-face js2-object-property-access 266 . 274) (nil fontified nil 266 . 274) (nil fontified nil 265 . 266) (nil fontified nil 262 . 265) (nil fontified nil 259 . 262) (nil font-lock-face font-lock-variable-name-face 251 . 259) (nil fontified nil 251 . 259) (nil fontified nil 250 . 251) (nil font-lock-face font-lock-keyword-face 245 . 250) (nil fontified nil 245 . 250) (nil fontified nil 241 . 245) (nil fontified nil 240 . 241) (nil fontified nil 239 . 240) (nil fontified nil 238 . 239) (nil font-lock-face js2-object-property-access 234 . 238) (nil fontified nil 234 . 238) (nil fontified nil 224 . 234) (nil help-echo "Undeclared variable or function 'URL'" 221 . 224) (nil font-lock-face js2-function-call 221 . 224) (nil fontified nil 221 . 224) (nil fontified nil 220 . 221) (nil font-lock-face font-lock-keyword-face 217 . 220) (nil fontified nil 217 . 220) (nil fontified nil 214 . 217) (nil font-lock-face font-lock-variable-name-face 211 . 214) (nil fontified nil 211 . 214) (nil fontified nil 210 . 211) (nil font-lock-face font-lock-keyword-face 205 . 210) (nil fontified nil 205 . 210) (205 . 343)) ((#("const url = new URL(location.href);
    const pathname = url.pathname.length < 2 ? 'index' : url.pathname.substr(1).replace(/\\.\\w+$/, '');" 0 5 (font-lock-face font-lock-keyword-face fontified nil) 5 6 (fontified nil) 6 9 (font-lock-face font-lock-variable-name-face fontified nil) 9 12 (fontified nil) 12 15 (font-lock-face font-lock-keyword-face fontified nil) 15 16 (fontified nil) 16 19 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'URL'" font-lock-face js2-function-call fontified nil) 19 29 (fontified nil) 29 33 (font-lock-face js2-object-property-access fontified nil) 33 34 (fontified nil) 34 35 (fontified nil rear-nonsticky t) 35 36 (fontified nil) 36 40 (fontified nil) 40 45 (font-lock-face font-lock-keyword-face fontified nil) 45 46 (fontified nil) 46 54 (font-lock-face font-lock-variable-name-face fontified nil) 54 57 (fontified nil) 57 60 (fontified nil) 60 61 (fontified nil) 61 69 (font-lock-face js2-object-property-access fontified nil) 69 70 (fontified nil) 70 76 (font-lock-face js2-object-property-access fontified nil) 76 83 (fontified nil) 83 90 (font-lock-face font-lock-string-face fontified nil) 90 93 (fontified nil) 93 96 (fontified nil) 96 97 (fontified nil) 97 105 (font-lock-face js2-object-property-access fontified nil) 105 106 (fontified nil) 106 112 (font-lock-face js2-function-call fontified nil) 112 116 (fontified nil) 116 117 (font-lock-face js2-function-call face (whitespace-line) fontified nil) 117 118 (font-lock-face js2-function-call face (whitespace-line) fontified nil) 118 119 (font-lock-face js2-function-call face (whitespace-line) fontified nil) 119 120 (font-lock-face js2-function-call face (whitespace-line) fontified nil) 120 121 (font-lock-face js2-function-call face (whitespace-line) fontified nil) 121 122 (font-lock-face js2-function-call face (whitespace-line) fontified nil) 122 123 (font-lock-face js2-function-call face (whitespace-line) fontified nil) 123 124 (face (whitespace-line) fontified nil) 124 125 (syntax-table (7 . 47) font-lock-face font-lock-string-face face (whitespace-line) fontified nil) 125 131 (font-lock-face font-lock-string-face face (whitespace-line) fontified nil) 131 132 (syntax-table (7 . 47) font-lock-face font-lock-string-face face (whitespace-line) fontified nil) 132 134 (face (whitespace-line) fontified nil) 134 136 (font-lock-face font-lock-string-face face (whitespace-line) fontified nil) 136 137 (face (whitespace-line) fontified nil) 137 138 (face (whitespace-line) fontified nil rear-nonsticky t)) . 205) (undo-tree-id1283 . -38) (undo-tree-id1284 . -16) (undo-tree-id1285 . -19) (nil help-echo "Undeclared variable or function 'URL'" 221 . 224) (nil fontified t 240 . 241) (nil fontified t 342 . 343)) (25361 50782 20689 861000) 0 nil])
([nil nil ((205 . 207)) ((#("  " 0 2 (fontified t)) . 205)) (25361 50794 990627 126000) 0 nil])
([nil nil ((#("const GITHUB_API = 'https://api.github.com/';
  const GITHUB_ENCODING__REST_V3 = 'application/vnd.github.v3+json';" 0 5 (font-lock-face font-lock-keyword-face fontified t) 5 6 (fontified t) 6 16 (font-lock-face font-lock-variable-name-face fontified t) 16 19 (fontified t) 19 44 (font-lock-face font-lock-string-face fontified t) 44 45 (rear-nonsticky t fontified t) 45 46 (fontified t) 46 48 (fontified t) 48 53 (font-lock-face font-lock-keyword-face fontified t) 53 54 (fontified t) 54 78 (font-lock-face font-lock-variable-name-face fontified t) 78 81 (fontified t) 81 113 (font-lock-face font-lock-string-face fontified t) 113 114 (rear-nonsticky t fontified t)) . 349) (undo-tree-id1237 . -114) (undo-tree-id1238 . -114) (undo-tree-id1239 . -46) (undo-tree-id1240 . -50) (undo-tree-id1241 . -2) (undo-tree-id1242 . -50) (undo-tree-id1243 . -2) (undo-tree-id1244 . -20) (undo-tree-id1245 . 94) (undo-tree-id1246 . -25) (undo-tree-id1247 . -45) (undo-tree-id1248 . -93) (undo-tree-id1249 . -45) (undo-tree-id1250 . -1) (undo-tree-id1251 . -114) (undo-tree-id1252 . -48) (undo-tree-id1253 . 6) (undo-tree-id1254 . -112) (undo-tree-id1255 . -114) (undo-tree-id1256 . -114) 463) ((349 . 463)) (25361 50782 20416 626000) 0 nil])
([nil nil ((#("    " 0 4 (fontified nil)) . 2942) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) (undo-tree-id1355 . -4) (undo-tree-id1356 . -4) (undo-tree-id1357 . -4) (undo-tree-id1358 . -4) (undo-tree-id1359 . -4) (undo-tree-id1360 . -4) (undo-tree-id1361 . -4) (undo-tree-id1362 . -4) (undo-tree-id1363 . -4) (undo-tree-id1364 . -4) (undo-tree-id1365 . -4) (undo-tree-id1366 . -4) (undo-tree-id1367 . -4) (undo-tree-id1368 . -4) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -4) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (#("  " 0 2 (face whitespace-trailing fontified t)) . 321)) ((321 . 323) (2942 . 2946) (t 25361 50786 962410 677000)) (25361 50795 355681 518000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . -2941) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) 2942 (t 25361 50786 962410 677000)) nil (25361 50807 781435 678000) 0 nil])
([nil nil ((206 . 208) (#("  " 0 2 (fontified nil)) . 205) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (205 . 208) (#("  " 0 2 (fontified nil)) . 204) (204 . 206) (204 . 205)) nil (25361 50807 781395 897000) 0 nil])
([nil nil ((nil rear-nonsticky nil 342 . 343) (nil fontified nil 205 . 343) (205 . 343)) nil (25361 50807 781388 692000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 343) (undo-tree-id1400 . -1) (undo-tree-id1401 . 1) (undo-tree-id1402 . -1)) nil (25361 50807 781386 202000) 0 nil])
([nil nil ((#("  
" 0 2 (face (whitespace-line whitespace-trailing) fontified t) 2 3 (fontified t)) . 343) (undo-tree-id1386 . -3) (undo-tree-id1387 . -3) (undo-tree-id1388 . -3) (undo-tree-id1389 . -3) (undo-tree-id1390 . -3) (undo-tree-id1391 . -3) (undo-tree-id1392 . -3) (undo-tree-id1393 . -3) (undo-tree-id1394 . -3) (undo-tree-id1395 . -3) (undo-tree-id1396 . -3) (undo-tree-id1397 . 3) (undo-tree-id1398 . -2) (undo-tree-id1399 . -3)) nil (25361 50807 781379 793000) 0 nil])
([nil nil ((#("  const GITHUB_API = 'https://api.github.com/';" 0 2 (face (whitespace-line) fontified t) 2 7 (face (whitespace-line font-lock-keyword-face) font-lock-face font-lock-keyword-face fontified t) 7 8 (face (whitespace-line) fontified t) 8 18 (face (whitespace-line font-lock-variable-name-face) font-lock-face font-lock-variable-name-face fontified t) 18 21 (face (whitespace-line) fontified t) 21 46 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 46 47 (face (whitespace-line) fontified t)) . 343) (undo-tree-id1380 . -47) (undo-tree-id1381 . -47) (undo-tree-id1382 . -47) (undo-tree-id1383 . -47) (undo-tree-id1384 . 47) (undo-tree-id1385 . -47)) nil (25361 50807 781360 254000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 343) (undo-tree-id1377 . -1) (undo-tree-id1378 . 1) (undo-tree-id1379 . -1)) nil (25361 50807 781350 615000) 0 nil])
([nil nil ((#("  const GITHUB_ENCODING__REST_V3 = 'application/vnd.github.v3+json';" 0 2 (face (whitespace-line) fontified t) 2 7 (face (whitespace-line font-lock-keyword-face) font-lock-face font-lock-keyword-face fontified t) 7 8 (face (whitespace-line) fontified t) 8 32 (face (whitespace-line font-lock-variable-name-face) font-lock-face font-lock-variable-name-face fontified t) 32 35 (face (whitespace-line) fontified t) 35 67 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 67 68 (face (whitespace-line) rear-nonsticky t fontified t)) . 343) (undo-tree-id1375 . 68) (undo-tree-id1376 . -68)) nil (25361 50807 781344 103000) 0 nil])
([nil nil ((205 . 207) 208) nil (25361 50807 781337 425000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -245) (undo-tree-id1374 . -1) 248) nil (25361 50807 781330 705000) 0 nil])
([nil nil ((343 . 346) (t 25361 50807 794046 747000)) nil (25361 50829 755916 36000) 0 nil])
([nil nil ((346 . 367)) nil (25361 50829 755914 629000) 0 nil])
([nil nil ((367 . 375)) nil (25361 50829 755910 234000) 0 nil])
([nil nil ((375 . 378) (t 25361 50829 765653 862000)) nil (25361 50848 954671 984000) 0 nil])
([nil nil ((nil rear-nonsticky nil 540 . 541) (nil fontified nil 378 . 541) (378 . 541)) nil (25361 50848 954670 943000) 0 nil])
([nil nil ((379 . 381) 446) nil (25361 50848 954669 736000) 0 nil])
([nil nil ((#("  
" 0 2 (face whitespace-trailing fontified t) 2 3 (fontified t)) . 376) (undo-tree-id1460 . -2) (undo-tree-id1461 . -3) (undo-tree-id1462 . -2) (undo-tree-id1463 . -2) (undo-tree-id1464 . -2) (undo-tree-id1465 . -2) (undo-tree-id1466 . -3)) nil (25361 50848 954668 59000) 0 nil])
([nil nil ((473 . 475)) nil (25361 50848 954588 150000) 0 nil])
([nil nil ((#("attrs" 0 5 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'attrs'" fontified t)) . 475) (undo-tree-id1458 . -5) (undo-tree-id1459 . -5)) nil (25361 50848 954587 70000) 0 nil])
([nil nil ((#("." 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified t)) . 475) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1)) nil (25361 50848 954584 665000) 0 nil])
([nil nil ((475 . 481)) nil (25361 50848 954580 327000) 0 nil])
([nil nil ((#(" as" 0 1 (fontified t) 1 3 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 452) (undo-tree-id1446 . -1) (undo-tree-id1447 . -3) (undo-tree-id1448 . -1) (undo-tree-id1449 . -3) (undo-tree-id1450 . -1) (undo-tree-id1451 . -3) (undo-tree-id1452 . -1) (undo-tree-id1453 . -3)) nil (25361 50848 954579 86000) 0 nil])
([nil nil ((#(" HTML" 0 1 (fontified t) 1 3 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 3 4 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 4 5 (face (whitespace-line) cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 452) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -5) (undo-tree-id1444 . -1) (undo-tree-id1445 . -5)) nil (25361 50848 954571 525000) 0 nil])
([nil nil ((#("Meta" 0 4 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 452) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4)) nil (25361 50848 954566 277000) 0 nil])
([nil nil ((#("Element" 0 4 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 4 7 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" face (whitespace-line) fontified t)) . 452) (undo-tree-id1437 . -7) (undo-tree-id1438 . -7)) nil (25361 50848 954560 698000) 0 nil])
([nil nil ((3165 . 3166) (t 25361 50848 965303 532000)) nil (25361 50890 852228 670000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -3165) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) 3166) nil (25361 50890 852227 437000) 0 nil])
([nil nil ((3171 . 3173) (3170 . 3172) (#("(" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified nil)) . -3170) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (3165 . 3171)) nil (25361 50890 852224 209000) 0 nil])
([nil nil ((#("r" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t)) . -3171) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (#("e" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t)) . -3172) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) 3173) nil (25361 50890 852220 791000) 0 nil])
([nil nil ((3180 . 3182) (#("{" 0 1 (fontified nil)) . -3180) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (3171 . 3181)) nil (25361 50890 852213 37000) 0 nil])
([nil nil ((3181 . 3186)) nil (25361 50890 852143 158000) 0 nil])
([nil nil ((3188 . 3189)) nil (25361 50890 852141 868000) 0 nil])
([nil nil ((3164 . 3172)) nil (25361 50890 852137 180000) 0 nil])
([nil nil ((3189 . 3196) (t 25361 50890 864518 621000)) nil (25361 50891 921504 334000) 0 nil])
([nil nil ((#("      " 0 6 (fontified t)) . -3190) (undo-tree-id1482 . -6) (undo-tree-id1483 . -6) (undo-tree-id1484 . -6) (undo-tree-id1485 . -6) 3196) nil (25361 50891 921499 926000) 0 nil])
([nil nil ((#("results.items[0];" 0 8 (fontified t) 8 13 (font-lock-face js2-object-property-access fontified t) 13 17 (fontified t)) . 3073) (undo-tree-id1503 . -17) (undo-tree-id1504 . -14) (undo-tree-id1505 . -8) (undo-tree-id1506 . -17) (t 25361 50891 932498 278000)) nil (25361 50937 306024 168000) 0 nil])
([nil nil ((3073 . 3077)) nil (25361 50937 306020 609000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . 3075) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1)) nil (25361 50937 306019 723000) 0 nil])
([nil nil ((3075 . 3077)) nil (25361 50937 306017 657000) 0 nil])
([nil nil ((#("      console.warn(`Issue search results do not contain an issue with title matching \"${term}\". Using first result.`);" 0 14 (fontified t) 14 18 (font-lock-face js2-function-call fontified t) 18 19 (fontified t) 19 80 (font-lock-face font-lock-string-face fontified t) 80 82 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 82 88 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 88 92 (face (whitespace-line) fontified t) 92 116 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 116 118 (face (whitespace-line) fontified t)) . 2941) (undo-tree-id1490 . -99) (undo-tree-id1491 . -99) (undo-tree-id1492 . -115) (undo-tree-id1493 . -116) (undo-tree-id1494 . -116) (undo-tree-id1495 . -115) (undo-tree-id1496 . -116) (undo-tree-id1497 . -116) (undo-tree-id1498 . -17) (undo-tree-id1499 . -6) (undo-tree-id1500 . -118)) nil (25361 50937 306015 658000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2941) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1)) nil (25361 50937 306003 287000) 0 nil])
([nil nil ((3059 . 3065) (t 25361 50937 317785 865000)) nil (25361 50987 963743 375000) 0 nil])
([nil nil ((3069 . 3075) (3068 . 3070) (#("(" 0 1 (fontified nil)) . -3068) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (3065 . 3069)) nil (25361 50987 963742 153000) 0 nil])
([nil nil ((3075 . 3083)) nil (25361 50987 963739 475000) 0 nil])
([nil nil ((3085 . 3087) (#("{" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "syntax error" fontified nil)) . -3085) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (3084 . 3086)) nil (25361 50987 963738 175000) 0 nil])
([nil nil ((3086 . 3093)) nil (25361 50987 963728 975000) 0 nil])
([nil nil ((3086 . 3095)) nil (25361 50987 963728 263000) 0 nil])
([nil nil ((3095 . 3116)) nil (25361 50987 963727 500000) 0 nil])
([nil nil ((3116 . 3137)) nil (25361 50987 963726 578000) 0 nil])
([nil nil ((3137 . 3139)) nil (25361 50987 963725 311000) 0 nil])
([nil nil ((3139 . 3140)) nil (25361 50987 963721 212000) 0 nil])
([nil nil ((#("// No existing issue, need to make a new one." 0 45 (font-lock-face font-lock-comment-face fontified t)) . 3095) (undo-tree-id1561 . -45) (undo-tree-id1562 . -45) (undo-tree-id1563 . -45) (t 25361 50987 967950 312000)) nil (25361 51009 75805 771000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3139 . 3140) (nil font-lock-face font-lock-comment-face 3095 . 3140) (nil fontified nil 3095 . 3140) (3095 . 3140)) nil (25361 51009 75802 759000) 0 nil])
([nil nil ((3148 . 3155)) nil (25361 51009 75801 532000) 0 nil])
([nil nil ((3160 . 3162) (#("{" 0 1 (fontified nil)) . -3160) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (3155 . 3161)) nil (25361 51009 75800 482000) 0 nil])
([nil nil ((3161 . 3168)) nil (25361 51009 75797 998000) 0 nil])
([nil nil ((3161 . 3170)) nil (25361 51009 75797 220000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3214 . 3215) (nil font-lock-face font-lock-comment-face 3170 . 3215) (nil fontified nil 3170 . 3215) (3170 . 3215)) nil (25361 51009 75796 332000) 0 nil])
([nil nil ((#("No existing issue, need to make a new one." 0 41 (font-lock-face font-lock-comment-face fontified t) 41 42 (font-lock-face font-lock-comment-face rear-nonsticky t fontified t)) . 3173) (undo-tree-id1554 . -42) (undo-tree-id1555 . -2) (undo-tree-id1556 . -11) (undo-tree-id1557 . -3) (undo-tree-id1558 . -42)) nil (25361 51009 75794 823000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -3075) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) 3076) nil (25361 51009 75790 643000) 0 nil])
([nil nil ((3075 . 3076)) nil (25361 51009 75786 720000) 0 nil])
([nil nil ((#("// No existing issue, need to make a new one." 0 44 (font-lock-face font-lock-comment-face fontified t) 44 45 (font-lock-face font-lock-comment-face rear-nonsticky t fontified t)) . 3095) (undo-tree-id1546 . -45) (undo-tree-id1547 . -3) (undo-tree-id1548 . -9) (undo-tree-id1549 . -9) (undo-tree-id1550 . -45)) nil (25361 51009 75785 640000) 0 nil])
([nil nil ((3116 . 3125)) nil (25361 51009 75781 66000) 0 nil])
([nil nil ((nil font-lock-face font-lock-comment-face 3169 . 3170) (nil fontified nil 3169 . 3170) (nil font-lock-face font-lock-comment-face 3125 . 3169) (nil fontified nil 3125 . 3169) (3125 . 3170)) nil (25361 51009 75780 112000) 0 nil])
([nil nil ((#("        // " 0 8 (fontified t) 8 10 (font-lock-face font-lock-comment-face fontified t) 10 11 (face whitespace-trailing font-lock-face font-lock-comment-face fontified t)) . 3171) (undo-tree-id1530 . -8) (undo-tree-id1531 . -8) (undo-tree-id1532 . -8) (undo-tree-id1533 . -11) (undo-tree-id1534 . -8) (undo-tree-id1535 . -11) (undo-tree-id1536 . -11) (undo-tree-id1537 . -11) (undo-tree-id1538 . -11) (undo-tree-id1539 . -11) (undo-tree-id1540 . -10) (undo-tree-id1541 . -8) (undo-tree-id1542 . -11) (undo-tree-id1543 . -10) (undo-tree-id1544 . -8) (undo-tree-id1545 . -11)) nil (25361 51009 75777 799000) 0 nil])
([nil nil ((#("
" 0 1 (font-lock-face font-lock-comment-face fontified t)) . 3171) (undo-tree-id1527 . -1) (undo-tree-id1528 . 1) (undo-tree-id1529 . -1)) nil (25361 51009 75749 430000) 0 nil])
([nil nil ((#("// No existing issue, need to make a new one." 0 44 (font-lock-face font-lock-comment-face fontified t) 44 45 (font-lock-face font-lock-comment-face fontified t rear-nonsticky t)) . 3125) (undo-tree-id1525 . -45) (undo-tree-id1526 . -45)) nil (25361 51009 75746 372000) 0 nil])
([nil nil ((nil font-lock-face font-lock-comment-face 3169 . 3170) (nil fontified nil 3169 . 3170) (nil font-lock-face font-lock-comment-face 3125 . 3169) (nil fontified nil 3125 . 3169) (3125 . 3170)) nil (25361 51009 75743 866000) 0 nil])
([nil nil ((nil font-lock-face font-lock-comment-face 3139 . 3140) (nil fontified nil 3139 . 3140) (nil font-lock-face font-lock-comment-face 3095 . 3139) (nil fontified nil 3095 . 3139) (3095 . 3140)) nil (25361 51009 75742 319000) 0 nil])
([nil nil ((#("No existing issue, need to make a new one." 0 41 (font-lock-face font-lock-comment-face fontified t) 41 42 (font-lock-face font-lock-comment-face fontified t rear-nonsticky t)) . 3098) (undo-tree-id1522 . -42) (undo-tree-id1523 . -2) (undo-tree-id1524 . -42)) nil (25361 51009 75740 632000) 0 nil])
([nil nil ((3098 . 3100)) nil (25361 51009 75737 867000) 0 nil])
([nil nil ((#("I" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3098) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (#("s" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3099) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) 3100) nil (25361 51009 75736 381000) 0 nil])
([nil nil ((3098 . 3099)) nil (25361 51009 75729 662000) 0 nil])
([nil nil ((#("E" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3098) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) 3099) nil (25361 51009 75727 780000) 0 nil])
([nil nil ((3098 . 3110)) nil (25361 51009 75717 504000) 0 nil])
([nil nil ((3110 . 3119)) nil (25361 51009 75713 258000) 0 nil])
([nil nil ((3012 . 3017) (t 25361 51009 88770 465000)) nil (25361 51076 437644 334000) 0 nil])
([nil nil ((3017 . 3022)) nil (25361 51076 437643 408000) 0 nil])
([nil nil ((#("const" 0 5 (font-lock-face font-lock-keyword-face fontified t)) . 3017) (undo-tree-id1600 . -1) (undo-tree-id1601 . -2) (undo-tree-id1602 . -3) (undo-tree-id1603 . -4) (undo-tree-id1604 . -5) (undo-tree-id1605 . -5)) nil (25361 51076 437642 360000) 0 nil])
([nil nil ((3017 . 3021)) nil (25361 51076 437637 850000) 0 nil])
([nil nil ((#("let" 0 3 (font-lock-face font-lock-keyword-face fontified t)) . 3017) (undo-tree-id1595 . -1) (undo-tree-id1596 . -2) (undo-tree-id1597 . -3) (undo-tree-id1598 . -3) (undo-tree-id1599 . -3)) nil (25361 51076 437636 691000) 0 nil])
([nil nil ((3017 . 3022)) nil (25361 51076 437632 546000) 0 nil])
([nil nil ((3023 . 3024)) nil (25361 51076 437631 822000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -3023) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) 3024) nil (25361 51076 621567 994000) 0 nil])
([nil nil ((3023 . 3031)) nil (25361 51094 432311 96000) 0 nil] [nil nil ((#("    const " 0 4 (fontified t) 4 9 (font-lock-face font-lock-keyword-face fontified t) 9 10 (face whitespace-trailing fontified t)) . 3013) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) (undo-tree-id1568 . -4) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) (undo-tree-id1571 . -4) (undo-tree-id1572 . -4) (undo-tree-id1573 . -4) (undo-tree-id1574 . -4) (undo-tree-id1575 . -4) (undo-tree-id1576 . -4) (undo-tree-id1577 . -10) (undo-tree-id1578 . -4) (undo-tree-id1579 . -4) (undo-tree-id1580 . -4) (undo-tree-id1581 . -5) (undo-tree-id1582 . -6) (undo-tree-id1583 . -7) (undo-tree-id1584 . -8) (undo-tree-id1585 . -9) (undo-tree-id1586 . -10) (undo-tree-id1587 . -10) (undo-tree-id1588 . -10) (undo-tree-id1589 . -9) (undo-tree-id1590 . -4) (undo-tree-id1591 . -10)) ((3013 . 3023)) (25361 51076 437817 86000) 0 nil])
([nil nil ((3031 . 3052)) nil (25361 51094 432310 225000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3013) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1)) ((3013 . 3014)) (25361 51076 437603 929000) 0 nil])
([nil nil ((3072 . 3074) (#("(" 0 1 (fontified nil)) . -3072) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (3052 . 3073)) nil (25361 51094 432309 12000) 0 nil])
nil
([nil nil ((3074 . 3087) (3073 . 3075) (#("'" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified nil)) . -3073) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (3073 . 3074)) nil (25361 51094 432305 679000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -3085) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (#("i" 0 1 (fontified t)) . -3086) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) 3087) nil (25361 51094 432301 885000) 0 nil])
([nil nil ((3085 . 3091)) nil (25361 51094 432288 147000) 0 nil])
([nil nil ((3093 . 3094)) nil (25361 51094 432283 475000) 0 nil])
([nil nil ((3201 . 3210) (t 25361 51094 443638 724000)) nil (25361 51165 81385 513000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3232 . 3233) (nil font-lock-face font-lock-variable-name-face 3210 . 3233) (nil fontified nil 3210 . 3233) (3210 . 3233)) nil (25361 51165 81384 358000) 0 nil])
([nil nil ((3245 . 3247) (#("'" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing name after . operator" fontified nil)) . -3245) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (3233 . 3246)) nil (25361 51165 81382 780000) 0 nil])
([nil nil ((3247 . 3248)) nil (25361 51165 81380 360000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3245) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . 1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (#("'" 0 1 (font-lock-face font-lock-string-face fontified t)) . 3246) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . 1) (undo-tree-id1755 . 1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1)) nil (25361 51165 81377 864000) 0 nil])
([nil nil ((3246 . 3249) (3245 . 3247) (#("`" 0 1 (fontified nil)) . -3245) (undo-tree-id1715 . 1) (undo-tree-id1716 . 1) (undo-tree-id1717 . 1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (3245 . 3246)) nil (25361 51165 81353 356000) 0 nil])
([nil nil ((#("D" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3246) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . 1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (#("o" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3247) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (#("n" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3248) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) 3249) nil (25361 51165 81196 363000) 0 nil])
([nil nil ((3094 . 3099)) nil (25361 51165 81185 331000) 0 nil])
([nil nil ((3099 . 3120)) nil (25361 51165 81184 604000) 0 nil])
([nil nil ((3123 . 3125) (#("'" 0 1 (fontified nil)) . -3123) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (3120 . 3124)) nil (25361 51165 81183 616000) 0 nil])
([nil nil ((3125 . 3130)) nil (25361 51165 81180 610000) 0 nil])
([nil nil ((3125 . 3126)) nil (25361 51165 81179 917000) 0 nil])
([nil nil ((3124 . 3125)) nil (25361 51165 81179 206000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3123) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . 1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (#("'" 0 1 (font-lock-face font-lock-string-face fontified t)) . 3124) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . 1) (undo-tree-id1690 . 1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (#("D" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3124) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . 1) (undo-tree-id1696 . -1) 3125) nil (25361 51165 81176 607000) 0 nil])
([nil nil ((3127 . 3131) (#(" " 0 1 (fontified nil)) . -3127) (undo-tree-id1654 . -1) (3127 . 3128) (#("'" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3127) (undo-tree-id1655 . -1) (3124 . 3128) (3123 . 3125) (#("\"" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified nil)) . -3123) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (3123 . 3124)) nil (25361 51165 81152 458000) 0 nil])
([nil nil ((3131 . 3139)) nil (25361 51165 81148 356000) 0 nil])
([nil nil ((3138 . 3147)) nil (25361 51165 81147 685000) 0 nil])
([nil nil ((#("e" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3145) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (#("z" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3146) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) 3147) nil (25361 51165 81146 372000) 0 nil])
([nil nil ((3145 . 3148)) nil (25361 51165 81140 790000) 0 nil])
([nil nil ((#("<a href=\"https://utteranc.es/\">utterances</a> to post as your GitHub account" 0 41 (font-lock-face font-lock-comment-face fontified t) 41 43 (font-lock-face font-lock-comment-face fontified t) 43 44 (font-lock-face font-lock-comment-face fontified t) 44 45 (font-lock-face font-lock-comment-face fontified t) 45 46 (font-lock-face font-lock-comment-face fontified t) 46 48 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 48 51 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 51 76 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t)) . 3503) (undo-tree-id1622 . -76) (undo-tree-id1623 . -76) (undo-tree-id1624 . -19) (undo-tree-id1625 . 59) (undo-tree-id1626 . -25) (undo-tree-id1627 . -17) (undo-tree-id1628 . 67) (undo-tree-id1629 . -14) (undo-tree-id1630 . -8) (undo-tree-id1631 . -9) (undo-tree-id1632 . -8) (undo-tree-id1633 . -9) (undo-tree-id1634 . -8) (undo-tree-id1635 . -9) (undo-tree-id1636 . -8) (undo-tree-id1637 . -9) (undo-tree-id1638 . -9) (undo-tree-id1639 . 73) (undo-tree-id1640 . -7) (undo-tree-id1641 . -3) (undo-tree-id1642 . -1) (undo-tree-id1643 . -76) (undo-tree-id1644 . -76) (undo-tree-id1645 . -76) 3579) nil (25361 51165 81139 3000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3223 . 3224) (nil font-lock-face font-lock-comment-face 3199 . 3224) (nil fontified nil 3199 . 3224) (nil font-lock-face font-lock-comment-face 3196 . 3199) (nil fontified nil 3196 . 3199) (nil font-lock-face font-lock-comment-face 3194 . 3196) (nil fontified nil 3194 . 3196) (nil font-lock-face font-lock-comment-face 3193 . 3194) (nil fontified nil 3193 . 3194) (nil font-lock-face font-lock-comment-face 3192 . 3193) (nil fontified nil 3192 . 3193) (nil font-lock-face font-lock-comment-face 3191 . 3192) (nil fontified nil 3191 . 3192) (nil font-lock-face font-lock-comment-face 3189 . 3191) (nil fontified nil 3189 . 3191) (nil font-lock-face font-lock-comment-face 3148 . 3189) (nil fontified nil 3148 . 3189) (3148 . 3224)) nil (25361 51165 81123 297000) 0 nil])
([nil nil ((#("as" 0 2 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t)) . 3202) (undo-tree-id1621 . -2)) nil (25361 51165 81119 968000) 0 nil])
([nil nil ((3202 . 3206)) nil (25361 51165 81117 921000) 0 nil])
([nil nil ((#("    " 0 4 (face whitespace-trailing fontified t)) . -3230) (undo-tree-id1618 . -4) (undo-tree-id1619 . -4) (undo-tree-id1620 . -4) 3206) nil (25361 51165 81114 418000) 0 nil])
([nil nil ((3382 . 3384) (#("{" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3382) (undo-tree-id1763 . 1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (3382 . 3383) (t 25361 51165 97530 355000)) nil (25361 51204 653457 333000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3397 . 3398) (nil font-lock-face font-lock-variable-name-face 3383 . 3398) (nil fontified nil 3383 . 3398) (3383 . 3398)) nil (25361 51204 653453 602000) 0 nil])
([nil nil ((3399 . 3407)) nil (25361 51204 653452 292000) 0 nil])
([nil nil ((3407 . 3428)) nil (25361 51204 653451 588000) 0 nil])
([nil nil ((3428 . 3445)) nil (25361 51204 653450 649000) 0 nil])
([nil nil ((#("e" 0 1 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . -3444) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) 3445) nil (25361 51204 653449 273000) 0 nil])
([nil nil ((3444 . 3450)) nil (25361 51204 653439 587000) 0 nil])
([nil nil ((3403 . 3424)) nil (25361 51204 653438 577000) 0 nil])
([nil nil ((3424 . 3439)) nil (25361 51204 653437 277000) 0 nil])
([nil nil ((3402 . 3410)) nil (25361 51204 653432 764000) 0 nil])
([nil nil ((3337 . 3346) (t 25361 51204 666421 783000)) nil (25361 51242 402741 129000) 0 nil])
([nil nil ((3346 . 3357)) nil (25361 51242 402740 2000) 0 nil])
([nil nil ((3346 . 3352)) nil (25361 51242 402739 154000) 0 nil])
([nil nil ((3363 . 3365) (#("'" 0 1 (fontified nil)) . -3363) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (3363 . 3364)) nil (25361 51242 402738 128000) 0 nil])
([nil nil ((3438 . 3444) (3437 . 3439) (#("{" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3437) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (3437 . 3438)) nil (25361 51242 402735 59000) 0 nil])
([nil nil ((#("R" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3443) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) 3444) nil (25361 51242 402731 700000) 0 nil])
([nil nil ((3443 . 3446)) nil (25361 51242 402728 356000) 0 nil])
([nil nil ((3365 . 3366)) nil (25361 51242 402727 406000) 0 nil])
([nil nil ((3610 . 3619)) nil (25361 51242 402726 547000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3778 . 3779) (nil fontified nil 3778 . 3779) (nil font-lock-face font-lock-string-face 3777 . 3778) (nil fontified nil 3777 . 3778) (nil font-lock-face font-lock-string-face 3745 . 3777) (nil fontified nil 3745 . 3777) (nil font-lock-face font-lock-string-face 3744 . 3745) (nil fontified nil 3744 . 3745) (nil font-lock-face font-lock-string-face 3743 . 3744) (nil fontified nil 3743 . 3744) (nil font-lock-face font-lock-string-face 3742 . 3743) (nil fontified nil 3742 . 3743) (nil font-lock-face font-lock-string-face 3741 . 3742) (nil fontified nil 3741 . 3742) (nil font-lock-face font-lock-string-face 3740 . 3741) (nil fontified nil 3740 . 3741) (nil font-lock-face font-lock-string-face 3739 . 3740) (nil fontified nil 3739 . 3740) (nil font-lock-face font-lock-string-face 3738 . 3739) (nil fontified nil 3738 . 3739) (nil font-lock-face font-lock-string-face 3737 . 3738) (nil fontified nil 3737 . 3738) (nil font-lock-face font-lock-string-face 3736 . 3737) (nil fontified nil 3736 . 3737) (nil font-lock-face font-lock-string-face 3735 . 3736) (nil fontified nil 3735 . 3736) (nil font-lock-face font-lock-string-face 3734 . 3735) (nil fontified nil 3734 . 3735) (nil font-lock-face font-lock-string-face 3733 . 3734) (nil fontified nil 3733 . 3734) (nil font-lock-face font-lock-string-face 3732 . 3733) (nil fontified nil 3732 . 3733) (nil font-lock-face font-lock-string-face 3731 . 3732) (nil fontified nil 3731 . 3732) (nil font-lock-face font-lock-string-face 3730 . 3731) (nil fontified nil 3730 . 3731) (nil font-lock-face font-lock-string-face 3709 . 3730) (nil fontified nil 3709 . 3730) (nil font-lock-face font-lock-string-face 3708 . 3709) (nil fontified nil 3708 . 3709) (nil font-lock-face font-lock-string-face 3707 . 3708) (nil fontified nil 3707 . 3708) (nil font-lock-face font-lock-string-face 3706 . 3707) (nil fontified nil 3706 . 3707) (nil font-lock-face font-lock-string-face 3705 . 3706) (nil fontified nil 3705 . 3706) (nil font-lock-face font-lock-string-face 3704 . 3705) (nil fontified nil 3704 . 3705) (nil font-lock-face font-lock-string-face 3703 . 3704) (nil fontified nil 3703 . 3704) (nil font-lock-face font-lock-string-face 3702 . 3703) (nil fontified nil 3702 . 3703) (nil font-lock-face font-lock-string-face 3701 . 3702) (nil fontified nil 3701 . 3702) (nil font-lock-face font-lock-string-face 3699 . 3701) (nil fontified nil 3699 . 3701) (nil font-lock-face font-lock-string-face 3698 . 3699) (nil fontified nil 3698 . 3699) (nil font-lock-face font-lock-string-face 3697 . 3698) (nil fontified nil 3697 . 3698) (nil font-lock-face font-lock-string-face 3696 . 3697) (nil fontified nil 3696 . 3697) (nil font-lock-face font-lock-string-face 3695 . 3696) (nil fontified nil 3695 . 3696) (nil font-lock-face font-lock-string-face 3694 . 3695) (nil fontified nil 3694 . 3695) (nil font-lock-face font-lock-string-face 3693 . 3694) (nil fontified nil 3693 . 3694) (nil font-lock-face font-lock-string-face 3692 . 3693) (nil fontified nil 3692 . 3693) (nil font-lock-face font-lock-string-face 3691 . 3692) (nil fontified nil 3691 . 3692) (nil font-lock-face font-lock-string-face 3682 . 3691) (nil fontified nil 3682 . 3691) (nil font-lock-face font-lock-string-face 3671 . 3682) (nil fontified nil 3671 . 3682) (nil font-lock-face font-lock-string-face 3670 . 3671) (nil fontified nil 3670 . 3671) (nil font-lock-face font-lock-string-face 3656 . 3670) (nil fontified nil 3656 . 3670) (nil font-lock-face font-lock-string-face 3655 . 3656) (nil fontified nil 3655 . 3656) (nil font-lock-face font-lock-string-face 3654 . 3655) (nil fontified nil 3654 . 3655) (nil fontified nil 3652 . 3654) (nil font-lock-face js2-object-property-access 3643 . 3652) (nil fontified nil 3643 . 3652) (nil fontified nil 3642 . 3643) (nil fontified nil 3641 . 3642) (nil fontified nil 3620 . 3641) (nil fontified nil 3619 . 3620) (3619 . 3779)) nil (25361 51242 402721 933000) 0 nil])
([nil nil ((#("issue" 0 5 (font-lock-face font-lock-string-face fontified t)) . 3683) (undo-tree-id1775 . 5) (undo-tree-id1776 . -5) (undo-tree-id1777 . -5) (undo-tree-id1778 . -5)) nil (25361 51242 402704 628000) 0 nil])
([nil nil ((3683 . 3691)) nil (25361 51242 402700 937000) 0 nil])
([nil nil ((3610 . 3619)) nil (25361 51242 402700 98000) 0 nil])
([nil nil ((3639 . 3641) (#("'" 0 1 (fontified nil)) . -3639) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (3619 . 3640)) nil (25361 51242 402698 659000) 0 nil])
([nil nil ((3641 . 3642)) nil (25361 51245 255317 830000) 0 nil])
([nil nil ((#("Leave" 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 1 2 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 2 3 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 3 4 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 4 5 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3729) (undo-tree-id1806 . -5)) nil (25361 51271 851502 595000) 0 nil] [nil nil ((#("
  // <div>Don't want to authorize ?
//         <span id=\"comments-new-issue\">
//           <a href=\"\">Make a new GitHub issue for this page and leave a comment on it.</a>
//           Your comment will be visible to everyone below.
//         </span>
//         <span id=\"comments-existing-issue\">
//           <a href=\"\">Leave a comment on this GitHub issue</a>, and it will be visible to everyone below
//         </span>
//       </div>
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (font-lock-face font-lock-comment-face fontified t) 6 7 (font-lock-face font-lock-comment-face fontified t) 7 10 (font-lock-face font-lock-comment-face fontified t) 10 11 (font-lock-face font-lock-comment-face fontified t) 11 35 (font-lock-face font-lock-comment-face fontified t) 35 36 (font-lock-face font-lock-comment-face fontified t) 36 37 (font-lock-face font-lock-comment-face fontified t) 37 40 (font-lock-face font-lock-comment-face fontified t) 40 79 (font-lock-face font-lock-comment-face fontified t) 79 82 (font-lock-face font-lock-comment-face fontified t) 82 159 (font-lock-face font-lock-comment-face fontified t) 159 162 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t) 162 167 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t) 167 169 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t) 169 170 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t) 170 171 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t) 171 172 (font-lock-face font-lock-comment-face fontified t) 172 175 (font-lock-face font-lock-comment-face fontified t) 175 233 (font-lock-face font-lock-comment-face fontified t) 233 236 (font-lock-face font-lock-comment-face fontified t) 236 244 (font-lock-face font-lock-comment-face fontified t) 244 246 (font-lock-face font-lock-comment-face fontified t) 246 250 (font-lock-face font-lock-comment-face fontified t) 250 251 (font-lock-face font-lock-comment-face fontified t) 251 252 (font-lock-face font-lock-comment-face fontified t) 252 255 (font-lock-face font-lock-comment-face fontified t) 255 299 (font-lock-face font-lock-comment-face fontified t) 299 302 (font-lock-face font-lock-comment-face fontified t) 302 359 (font-lock-face font-lock-comment-face fontified t) 359 361 (font-lock-face font-lock-comment-face fontified t) 361 362 (font-lock-face font-lock-comment-face fontified t) 362 363 (font-lock-face font-lock-comment-face fontified t) 363 379 (font-lock-face font-lock-comment-face fontified t) 379 382 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t) 382 405 (font-lock-face font-lock-comment-face face (whitespace-line) fontified t) 405 406 (font-lock-face font-lock-comment-face fontified t) 406 409 (font-lock-face font-lock-comment-face fontified t) 409 417 (font-lock-face font-lock-comment-face fontified t) 417 419 (font-lock-face font-lock-comment-face fontified t) 419 423 (font-lock-face font-lock-comment-face fontified t) 423 424 (font-lock-face font-lock-comment-face fontified t) 424 425 (font-lock-face font-lock-comment-face fontified t) 425 426 (font-lock-face font-lock-comment-face fontified t) 426 428 (font-lock-face font-lock-comment-face fontified t) 428 434 (font-lock-face font-lock-comment-face fontified t) 434 436 (font-lock-face font-lock-comment-face fontified t) 436 439 (font-lock-face font-lock-comment-face fontified t) 439 440 (font-lock-face font-lock-comment-face rear-nonsticky t fontified t) 440 441 (font-lock-face font-lock-comment-face fontified t)) . -3897) (undo-tree-id1766 . -441) (undo-tree-id1767 . -441) (undo-tree-id1768 . -441) (undo-tree-id1769 . -441) (undo-tree-id1770 . -35) (undo-tree-id1771 . -441) (undo-tree-id1772 . -441) 4338) ((3897 . 4338) (t 25361 51242 415170 202000)) (25361 51242 402690 779000) 0 nil])
([nil nil ((#(" a" 0 2 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . 3729) (undo-tree-id1804 . -1) (undo-tree-id1805 . -2)) nil (25361 51271 851500 726000) 0 nil])
nil
([nil nil ((#(" comment" 0 1 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 1 2 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 2 3 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 3 4 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 4 5 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 5 6 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 6 7 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 7 8 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . 3729) (undo-tree-id1801 . -6) (undo-tree-id1802 . -1) (undo-tree-id1803 . -8)) nil (25361 51271 851498 441000) 0 nil])
([nil nil ((#(" on" 0 3 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . 3729) (undo-tree-id1799 . -1) (undo-tree-id1800 . -3)) nil (25361 51271 851495 496000) 0 nil])
([nil nil ((#(" this" 0 5 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3729) (undo-tree-id1797 . -1) (undo-tree-id1798 . -5)) nil (25361 51271 851493 370000) 0 nil])
([nil nil ((#(" Git" 0 4 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . 3729) (undo-tree-id1794 . -4) (undo-tree-id1795 . -1) (undo-tree-id1796 . -4)) nil (25361 51271 851491 59000) 0 nil])
([nil nil ((#("Hub" 0 3 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3729) (undo-tree-id1793 . -3)) nil (25361 51271 851487 795000) 0 nil])
([nil nil ((#(" issue" 0 6 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3729) (undo-tree-id1791 . -1) (undo-tree-id1792 . -6)) nil (25361 51271 851485 947000) 0 nil])
([nil nil ((3729 . 3746)) nil (25361 51271 851483 557000) 0 nil])
([nil nil ((3746 . 3767)) nil (25361 51271 851482 710000) 0 nil])
([nil nil ((3767 . 3788)) nil (25361 51271 851481 822000) 0 nil])
([nil nil ((3788 . 3793)) nil (25361 51271 851480 881000) 0 nil])
([nil nil ((#("," 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3797)) nil (25361 51271 851479 706000) 0 nil])
([nil nil ((#(" and" 0 1 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 1 2 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 2 3 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t) 3 4 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . 3797) (undo-tree-id1789 . -1) (undo-tree-id1790 . -4)) nil (25361 51271 851478 581000) 0 nil])
([nil nil ((#("i" 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3798)) nil (25361 51271 851475 900000) 0 nil])
([nil nil ((3798 . 3799)) nil (25361 51271 851474 698000) 0 nil])
([nil nil ((#("It" 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 1 2 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3798) (undo-tree-id1786 . -1) (undo-tree-id1787 . -2) (undo-tree-id1788 . -2)) nil (25361 51271 851472 425000) 0 nil])
([nil nil ((3798 . 3810)) nil (25361 51271 851458 699000) 0 nil])
([nil nil ((#("
  // <div>Don't want to authorize ?
//         <span id=\"comments-new-issue\">
//           <a href=\"\">Make a new GitHub issue for this page and leave a comment on it.</a>
//           Your comment will be visible to everyone below.
//         </span>
//         <span id=\"comments-existing-issue\">
//           <a href=\"\">Leave a comment on this GitHub issue</a>, and it will be visible to everyone below
//         </span>
//       </div>
" 0 1 (fontified t) 1 3 (fontified t) 3 6 (font-lock-face font-lock-comment-face fontified t) 6 7 (font-lock-face font-lock-comment-face fontified t) 7 10 (font-lock-face font-lock-comment-face fontified t) 10 11 (font-lock-face font-lock-comment-face fontified t) 11 35 (font-lock-face font-lock-comment-face fontified t) 35 36 (font-lock-face font-lock-comment-face fontified t) 36 37 (font-lock-face font-lock-comment-face fontified t) 37 40 (font-lock-face font-lock-comment-face fontified t) 40 79 (font-lock-face font-lock-comment-face fontified t) 79 82 (font-lock-face font-lock-comment-face fontified t) 82 159 (font-lock-face font-lock-comment-face fontified t) 159 162 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 162 167 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 167 169 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 169 170 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 170 171 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 171 172 (font-lock-face font-lock-comment-face fontified t) 172 175 (font-lock-face font-lock-comment-face fontified t) 175 233 (font-lock-face font-lock-comment-face fontified t) 233 236 (font-lock-face font-lock-comment-face fontified t) 236 244 (font-lock-face font-lock-comment-face fontified t) 244 246 (font-lock-face font-lock-comment-face fontified t) 246 250 (font-lock-face font-lock-comment-face fontified t) 250 251 (font-lock-face font-lock-comment-face fontified t) 251 252 (font-lock-face font-lock-comment-face fontified t) 252 255 (font-lock-face font-lock-comment-face fontified t) 255 299 (font-lock-face font-lock-comment-face fontified t) 299 302 (font-lock-face font-lock-comment-face fontified t) 302 359 (font-lock-face font-lock-comment-face fontified t) 359 361 (font-lock-face font-lock-comment-face fontified t) 361 362 (font-lock-face font-lock-comment-face fontified t) 362 363 (font-lock-face font-lock-comment-face fontified t) 363 379 (font-lock-face font-lock-comment-face fontified t) 379 382 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 382 405 (font-lock-face font-lock-comment-face face (whitespace-line font-lock-comment-face) fontified t) 405 406 (font-lock-face font-lock-comment-face fontified t) 406 409 (font-lock-face font-lock-comment-face fontified t) 409 417 (font-lock-face font-lock-comment-face fontified t) 417 419 (font-lock-face font-lock-comment-face fontified t) 419 423 (font-lock-face font-lock-comment-face fontified t) 423 424 (font-lock-face font-lock-comment-face fontified t) 424 425 (font-lock-face font-lock-comment-face fontified t) 425 426 (font-lock-face font-lock-comment-face fontified t) 426 428 (font-lock-face font-lock-comment-face fontified t) 428 434 (font-lock-face font-lock-comment-face fontified t) 434 436 (font-lock-face font-lock-comment-face fontified t) 436 439 (font-lock-face font-lock-comment-face fontified t) 439 440 (font-lock-face font-lock-comment-face rear-nonsticky t fontified t) 440 441 (font-lock-face font-lock-comment-face fontified t)) . -3930) (undo-tree-id1807 . -441) (undo-tree-id1808 . -441) (undo-tree-id1809 . -441) (undo-tree-id1810 . -441) (undo-tree-id1811 . -35) (undo-tree-id1812 . -441) (undo-tree-id1813 . -1) (undo-tree-id1814 . -37) (undo-tree-id1815 . -79) (undo-tree-id1816 . -172) (undo-tree-id1817 . -233) (undo-tree-id1818 . -252) (undo-tree-id1819 . -299) (undo-tree-id1820 . -398) (undo-tree-id1821 . -406) (undo-tree-id1822 . -425) (undo-tree-id1823 . -441) 4371 (t 25361 51271 863689 562000)) nil (25361 51279 558701 970000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3363) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . 1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (#("'" 0 1 (font-lock-face font-lock-string-face fontified t)) . 3364) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . 1) (undo-tree-id1844 . 1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (t 25361 51279 567816 541000)) nil (25361 51489 902077 471000) 0 nil])
([nil nil ((3363 . 3377)) nil (25361 51489 902046 357000) 0 nil])
([nil nil ((3276 . 3283) (t 25361 51489 918066 373000)) nil (25361 51497 469961 819000) 0 nil])
([nil nil ((3303 . 3304) (3302 . 3304) (#("'" 0 1 (fontified nil)) . -3302) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (3292 . 3303) (3291 . 3293) (#("{" 0 1 (fontified nil)) . -3291) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (3283 . 3292)) nil (25361 51497 469959 497000) 0 nil])
([nil nil ((3304 . 3306)) nil (25361 51497 469947 303000) 0 nil])
([nil nil ((3306 . 3321)) nil (25361 51497 469942 513000) 0 nil])
([nil nil ((3323 . 3324) (t 25361 51497 482109 508000)) nil (25361 51498 799627 283000) 0 nil])
([nil nil ((#("!" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" font-lock-face font-lock-negation-char-face fontified t)) . 1277) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (t 25361 51498 814116 871000)) nil (25361 51553 470024 123000) 0 nil])
([nil nil ((#("!" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" font-lock-face font-lock-negation-char-face fontified t)) . 1346) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1)) nil (25361 51553 470020 330000) 0 nil])
([nil nil ((#("!" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" font-lock-face font-lock-negation-char-face fontified t)) . 1407) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1)) nil (25361 51553 470014 388000) 0 nil])
([nil nil ((3153 . 3154) (t 25361 51553 478360 904000)) nil (25361 51575 122627 701000) 0 nil])
([nil nil ((3175 . 3176)) nil (25361 51575 122622 969000) 0 nil])
([nil nil ((#(")" 0 1 (fontified nil)) . 3994) (undo-tree-id1860 . -1) (3993 . 3994) (3992 . 3994) (#("(" 0 1 (fontified nil)) . -3992) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (3992 . 3993) (t 25361 51575 138427 789000)) nil (25361 51620 278479 233000) 0 nil])
([nil nil ((3470 . 3471) (t 25361 51620 290516 935000)) nil (25361 51641 210554 345000) 0 nil])
([nil nil ((3498 . 3499)) nil (25361 51641 210553 174000) 0 nil])
([nil nil ((3775 . 3776)) nil (25361 51641 210551 864000) 0 nil])
([nil nil ((3748 . 3749)) nil (25361 51641 210547 717000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face font-lock-string-face fontified t)) . -3488) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) 3489 (t 25361 51641 222536 495000)) nil (25361 51663 737274 866000) 0 nil])
([nil nil ((3488 . 3491)) nil (25361 51663 737270 772000) 0 nil])
([nil nil ((3491 . 3492)) nil (25361 51663 737269 859000) 0 nil])
([nil nil ((#(" " 0 1 (font-lock-face font-lock-string-face fontified t)) . -3769) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) 3770) nil (25361 51663 737267 736000) 0 nil])
([nil nil ((3769 . 3773)) nil (25361 51663 737254 927000) 0 nil])
([nil nil ((#("      issue = {html_url: 'https://github.com'};" 0 6 (fontified t) 6 14 (fontified t) 14 15 (fontified t) 15 23 (font-lock-face js2-object-property fontified t) 23 25 (fontified t) 25 44 (font-lock-face font-lock-string-face fontified t) 44 45 (font-lock-face font-lock-string-face fontified t) 45 47 (fontified t)) . 3276) (undo-tree-id1871 . 13) (undo-tree-id1872 . -40) (undo-tree-id1873 . -47) (undo-tree-id1874 . -6) (undo-tree-id1875 . -47) (t 25361 51663 746543 11000)) nil (25361 51680 452887 365000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3276) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1)) nil (25361 51680 452879 169000) 0 nil])
([nil nil ((#(" for" 0 4 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3773) (undo-tree-id1878 . -4) (t 25361 51680 462538 487000)) nil (25361 51705 184844 453000) 0 nil])
([nil nil ((#(" this" 0 5 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . 3773) (undo-tree-id1877 . -5)) nil (25361 51705 184841 983000) 0 nil])
([nil nil ((#(" page" 0 5 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t)) . 3773) (undo-tree-id1876 . -5)) nil (25361 51705 184836 869000) 0 nil])
([nil nil ((3675 . 3677) (#("{" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3675) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (3656 . 3676) (t 25361 51705 198517 743000)) nil (25361 51819 353014 910000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3677) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . 1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) 3678) nil (25361 51819 353004 839000) 0 nil])
([nil nil ((3677 . 3679) (#("`" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3677) (undo-tree-id1954 . 1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (3677 . 3678)) nil (25361 51819 352981 474000) 0 nil])
([nil nil ((#("`" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-string-face fontified t)) . 3678) (undo-tree-id1953 . -1)) nil (25361 51819 352971 993000) 0 nil])
([nil nil ((#("'" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "unterminated string literal" font-lock-face font-lock-string-face fontified t)) . -3655) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . 1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) 3656) nil (25361 51819 352965 135000) 0 nil])
([nil nil ((3655 . 3657) (#("`" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified nil)) . -3655) (undo-tree-id1939 . 1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (3655 . 3656)) nil (25361 51819 352940 507000) 0 nil])
([nil nil ((#("`" 0 1 (font-lock-face font-lock-string-face fontified t)) . 3656) (undo-tree-id1934 . -1) (undo-tree-id1935 . 1) (undo-tree-id1936 . 1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1)) nil (25361 51819 352930 312000) 0 nil])
([nil nil ((3675 . 3676)) nil (25361 51819 352919 57000) 0 nil])
([nil nil ((3677 . 3682)) nil (25361 51819 352916 753000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . 3686) (undo-tree-id1931 . -1) (3685 . 3686) (3684 . 3686) (#("{" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3684) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (3683 . 3685)) nil (25361 51819 352912 224000) 0 nil])
([nil nil ((3685 . 3689)) nil (25361 51819 352902 34000) 0 nil])
([nil nil ((3683 . 3684)) nil (25361 51819 352899 666000) 0 nil])
([nil nil ((3691 . 3702)) nil (25361 51819 352897 311000) 0 nil])
([nil nil ((3626 . 3635)) nil (25361 51819 352894 903000) 0 nil])
([nil nil ((3635 . 3641)) nil (25361 51819 352892 608000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3651 . 3652) (nil font-lock-face font-lock-variable-name-face 3641 . 3652) (nil fontified nil 3641 . 3652) (3641 . 3652)) nil (25361 51819 352889 647000) 0 nil])
([nil nil ((#("U" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face fontified t)) . -3649) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (#("r" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face fontified t)) . -3650) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (#("l" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face rear-nonsticky t fontified t)) . -3651) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) 3652) nil (25361 51819 352881 301000) 0 nil])
([nil nil ((3657 . 3659) (#("'" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face fontified nil)) . -3657) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (3649 . 3658)) nil (25361 51819 352848 70000) 0 nil])
([nil nil ((#("const newIssueTitle = ''" 0 5 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-keyword-face fontified t) 5 6 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" fontified t) 6 22 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face fontified t) 22 23 (fontified t) 23 24 (fontified t)) . 3635) (undo-tree-id1883 . -6) (undo-tree-id1884 . -1) (undo-tree-id1885 . -2) (undo-tree-id1886 . -3) (undo-tree-id1887 . -4) (undo-tree-id1888 . -5) (undo-tree-id1889 . -6) (undo-tree-id1890 . -5) (undo-tree-id1891 . -6) (undo-tree-id1892 . -6) (undo-tree-id1893 . -14) (undo-tree-id1894 . -14) (undo-tree-id1895 . -14) (undo-tree-id1896 . -14) (undo-tree-id1897 . -14) (undo-tree-id1898 . -15) (undo-tree-id1899 . -16) (undo-tree-id1900 . -17) (undo-tree-id1901 . -18) (undo-tree-id1902 . -19) (undo-tree-id1903 . -20) (undo-tree-id1904 . -21) (undo-tree-id1905 . -22) (undo-tree-id1906 . -22) (undo-tree-id1907 . -22) (undo-tree-id1908 . -22) (undo-tree-id1909 . -22) (undo-tree-id1910 . -22) (undo-tree-id1911 . -23) (undo-tree-id1912 . -23) (undo-tree-id1913 . -24)) nil (25361 51819 352834 396000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3658 . 3659) (nil fontified nil 3658 . 3659) (nil fontified nil 3657 . 3658) (nil help-echo "missing ; after statement" 3641 . 3657) (nil font-lock-face font-lock-variable-name-face 3641 . 3657) (nil fontified nil 3641 . 3657) (nil help-echo "missing ; after statement" 3640 . 3641) (nil fontified nil 3640 . 3641) (nil help-echo "missing ; after statement" 3635 . 3640) (nil font-lock-face font-lock-keyword-face 3635 . 3640) (nil fontified nil 3635 . 3640) (3635 . 3659)) nil (25361 51819 352772 261000) 0 nil])
([nil nil ((3626 . 3635)) nil (25361 51819 352763 160000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3658 . 3659) (nil fontified nil 3658 . 3659) (nil fontified nil 3657 . 3658) (nil help-echo "missing ; after statement" 3641 . 3657) (nil font-lock-face font-lock-variable-name-face 3641 . 3657) (nil fontified nil 3641 . 3657) (nil help-echo "missing ; after statement" 3640 . 3641) (nil fontified nil 3640 . 3641) (nil help-echo "missing ; after statement" 3635 . 3640) (nil font-lock-face font-lock-keyword-face 3635 . 3640) (nil fontified nil 3635 . 3640) (3635 . 3659)) nil (25361 51819 352758 629000) 0 nil])
([nil nil ((#("Title" 0 5 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; after statement" font-lock-face font-lock-variable-name-face fontified t)) . 3649) (undo-tree-id1882 . -5)) nil (25361 51819 352749 85000) 0 nil])
([nil nil ((3649 . 3653)) nil (25361 51819 352744 687000) 0 nil])
([nil nil ((3658 . 3659)) nil (25361 51819 352742 78000) 0 nil])
([nil nil ((3692 . 3693)) nil (25361 51823 34072 385000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3673 . 3674) (nil fontified nil 3656 . 3674) (3656 . 3674)) nil (25361 51839 749828 114000) 0 nil] [nil nil ((nil rear-nonsticky nil 3739 . 3740) (nil fontified nil 3722 . 3740) (3722 . 3740)) ((#("encodeURIComponent" 0 17 (fontified nil) 17 18 (rear-nonsticky nil fontified nil)) . 3722) (undo-tree-id1985 . -18) (undo-tree-id1986 . -18) (undo-tree-id1987 . -18) (undo-tree-id1988 . -18) (undo-tree-id1989 . -18) (undo-tree-id1990 . -18) (undo-tree-id1991 . -18) (undo-tree-id1992 . -18) (undo-tree-id1993 . -18) (nil rear-nonsticky t 3739 . 3740)) (25361 51822 501373 803000) 0 nil])
([nil nil ((3674 . 3676) (#("(" 0 1 (fontified nil)) . -3674) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (3674 . 3675)) nil (25361 51839 749826 701000) 0 nil])
([nil nil ((3740 . 3742) (#("(" 0 1 (fontified nil)) . -3740) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (3740 . 3741)) ((#("(" 0 1 (fontified nil)) . 3740) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (3740 . 3741) (#("()" 0 1 (fontified t) 1 2 (fontified t)) . 3740) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1)) (25361 51822 128990 236000) 0 nil])
([nil nil ((3677 . 3678) (#(")" 0 1 (fontified t)) . -3675) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1)) nil (25361 51839 749823 707000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . 3741) (undo-tree-id1879 . -1)) ((3741 . 3742)) (25361 51821 836882 548000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3727 . 3728) (nil fontified nil 3710 . 3728) (3710 . 3728)) nil (25361 51839 749819 828000) 0 nil])
([nil nil ((3789 . 3790)) ((#(")" 0 1 (face (whitespace-line font-lock-string-face) fontified t)) . 3789) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (t 25361 51819 366225 445000)) (25361 51819 352707 781000) 0 nil])
([nil nil ((3728 . 3730) (#("(" 0 1 (fontified nil)) . -3728) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (3728 . 3729)) nil (25361 51839 749818 230000) 0 nil])
nil
([nil nil ((3731 . 3732) (#(")" 0 1 (fontified t)) . -3729) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1)) nil (25361 51839 749814 694000) 0 nil])
([nil nil ((3809 . 3816)) nil (25361 51839 749810 389000) 0 nil])
([nil nil ((#("}" 0 1 (face (whitespace-line) fontified nil)) . 3819) (undo-tree-id1994 . -1) (3818 . 3819) (3817 . 3819) (#("{" 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified nil)) . -3817) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (3816 . 3818)) nil (25361 51839 750203 722000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3830 . 3831) (nil font-lock-face font-lock-variable-name-face 3818 . 3831) (nil fontified nil 3818 . 3831) (3818 . 3831)) nil (25361 51854 467972 217000) 0 nil] [nil nil ((nil rear-nonsticky nil 3919 . 3920) (nil font-lock-face font-lock-variable-name-face 3907 . 3920) (nil fontified nil 3907 . 3920) (3907 . 3920)) ((#("newIssueTitle" 0 12 (font-lock-face font-lock-variable-name-face cursor-sensor-functions (js2-echo-error) help-echo "syntax error" face (whitespace-line) fontified nil) 12 13 (font-lock-face font-lock-variable-name-face cursor-sensor-functions (js2-echo-error) help-echo "syntax error" face (whitespace-line) rear-nonsticky nil fontified nil)) . 3907) (undo-tree-id2009 . -13) (undo-tree-id2010 . -13) (undo-tree-id2011 . -13) (nil font-lock-face nil 3919 . 3920) (nil font-lock-face nil 3907 . 3919) (nil rear-nonsticky t 3919 . 3920)) (25361 51839 749795 143000) 0 nil])
([nil nil ((3832 . 3837)) nil (25361 51854 467969 499000) 0 nil])
nil
([nil nil ((#("y" 0 1 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified t)) . -3836) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) 3837) nil (25361 51854 467967 272000) 0 nil])
([nil nil ((#("}" 0 1 (face (whitespace-line) fontified nil)) . 3841) (undo-tree-id2038 . -1) (3840 . 3841) (3839 . 3841) (#("{" 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified nil)) . -3839) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (3836 . 3840)) nil (25361 51854 467960 243000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3851 . 3852) (nil font-lock-face font-lock-variable-name-face 3840 . 3852) (nil fontified nil 3840 . 3852) (3840 . 3852)) nil (25361 51854 467953 12000) 0 nil])
([nil nil ((#("        const newIssueTitle = encodeURIComponent('');" 0 8 (fontified t) 8 13 (font-lock-face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 27 (font-lock-face font-lock-variable-name-face fontified t) 27 30 (fontified t) 30 47 (font-lock-face font-lock-builtin-face fontified t) 47 48 (font-lock-face font-lock-builtin-face rear-nonsticky t fontified t) 48 49 (fontified t) 49 50 (font-lock-face font-lock-string-face fontified t) 50 51 (font-lock-face font-lock-string-face rear-nonsticky t fontified t) 51 52 (fontified t) 52 53 (fontified t)) . 3680) (undo-tree-id2027 . -8) (undo-tree-id2028 . -48) (undo-tree-id2029 . -48) (undo-tree-id2030 . -49) (undo-tree-id2031 . -30) (undo-tree-id2032 . -14) (undo-tree-id2033 . -8) (undo-tree-id2034 . -26) (undo-tree-id2035 . -19) (undo-tree-id2036 . -8) (undo-tree-id2037 . -53)) nil (25361 51854 467949 183000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -3679) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) 3680) nil (25361 51854 467931 462000) 0 nil])
([nil nil ((3626 . 3635)) nil (25361 51854 467900 622000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3687 . 3688) (nil fontified nil 3687 . 3688) (nil fontified nil 3686 . 3687) (nil font-lock-face font-lock-string-face 3685 . 3686) (nil fontified nil 3685 . 3686) (nil font-lock-face font-lock-string-face 3684 . 3685) (nil fontified nil 3684 . 3685) (nil fontified nil 3683 . 3684) (nil font-lock-face font-lock-builtin-face 3682 . 3683) (nil fontified nil 3682 . 3683) (nil font-lock-face font-lock-builtin-face 3665 . 3682) (nil fontified nil 3665 . 3682) (nil fontified nil 3662 . 3665) (nil font-lock-face font-lock-variable-name-face 3649 . 3662) (nil fontified nil 3649 . 3662) (nil fontified nil 3648 . 3649) (nil font-lock-face font-lock-keyword-face 3643 . 3648) (nil fontified nil 3643 . 3648) (nil fontified nil 3635 . 3643) (3635 . 3688)) nil (25361 51854 467896 677000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . -3635) 3688) nil (25361 51854 467882 338000) 0 nil])
([nil nil ((3228 . 3233) (t 25361 51854 486077 501000)) nil (25361 51888 323984 452000) 0 nil])
([nil nil ((3233 . 3254)) nil (25361 51888 323983 568000) 0 nil])
([nil nil ((3254 . 3260)) nil (25361 51888 323982 832000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3290 . 3291) (nil font-lock-face font-lock-variable-name-face 3282 . 3291) (nil fontified nil 3282 . 3291) (3282 . 3291)) nil (25361 51888 323982 10000) 0 nil])
([nil nil ((#("pathname" 0 8 (fontified t)) . 3291) (undo-tree-id2102 . -1) (undo-tree-id2103 . -8)) nil (25361 51888 323980 685000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3709) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . 1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (#("'" 0 1 (font-lock-face font-lock-string-face fontified t rear-nonsticky t)) . 3710) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . 1) (undo-tree-id2099 . 1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1)) nil (25361 51888 323975 121000) 0 nil])
([nil nil ((nil fontified nil 3717 . 3718) (nil fontified nil 3709 . 3717) (3709 . 3718)) nil (25361 51888 323922 711000) 0 nil])
([nil nil ((3770 . 3772) (t 25361 51888 337912 5000)) nil (25361 51899 135200 650000) 0 nil])
([nil nil ((#("'" 0 1 (font-lock-face font-lock-string-face rear-nonsticky t fontified t)) . -3772) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . 1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) 3773) nil (25361 51992 396857 714000) 0 nil] [nil nil ((#(")" 0 1 (fontified t)) . 3773) (undo-tree-id2104 . -1)) ((3773 . 3774)) (25361 51899 135049 935000) 0 nil])
([nil nil ((3772 . 3774) (#("`" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3772) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (3772 . 3773)) nil (25361 51992 396849 992000) 0 nil])
nil
([nil nil ((#("`" 0 1 (font-lock-face font-lock-string-face fontified t)) . 3773) (undo-tree-id2137 . -1)) nil (25361 51992 396847 274000) 0 nil])
([nil nil ((#("'" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "unterminated string literal" font-lock-face font-lock-string-face fontified t)) . -3769) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . 1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) 3770) nil (25361 51992 396845 463000) 0 nil])
([nil nil ((3769 . 3771) (#("`" 0 1 (fontified nil)) . -3769) (undo-tree-id2124 . 1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (3769 . 3770)) nil (25361 51992 396837 609000) 0 nil])
([nil nil ((#("`" 0 1 (font-lock-face font-lock-string-face fontified t)) . 3770) (undo-tree-id2117 . -1) (undo-tree-id2118 . 1) (undo-tree-id2119 . 1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1)) nil (25361 51992 396834 313000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . 3775) (undo-tree-id2114 . -1) (3774 . 3775) (3773 . 3775) (#("{" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3773) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (3772 . 3774)) nil (25361 51992 396828 217000) 0 nil])
([nil nil ((3774 . 3779)) nil (25361 51992 396824 863000) 0 nil])
([nil nil ((#("}" 0 1 (fontified nil)) . 3787) (undo-tree-id2111 . -1) (3786 . 3787) (3785 . 3787) (#("{" 0 1 (font-lock-face font-lock-string-face fontified nil)) . -3785) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (3780 . 3786)) nil (25361 51992 396823 577000) 0 nil])
([nil nil ((3786 . 3797)) nil (25361 51992 396820 190000) 0 nil])
([nil nil ((3798 . 3802)) nil (25361 51992 396819 359000) 0 nil])
([nil nil ((#("]" 0 1 (face (whitespace-line) fontified nil)) . 3804) (undo-tree-id2108 . -1) (3803 . 3804) (3802 . 3804) (#("[" 0 1 (face (whitespace-line font-lock-string-face) font-lock-face font-lock-string-face fontified nil)) . -3802) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (3802 . 3803)) nil (25361 51992 396818 148000) 0 nil])
([nil nil ((242 . 245)) nil (25361 51992 396814 554000) 0 nil])
([nil nil ((nil rear-nonsticky nil 421 . 422) (nil fontified nil 243 . 422) (243 . 422)) nil (25361 51992 396813 697000) 0 nil])
([nil nil ((#("attrs" 0 5 (cursor-sensor-functions (js2-echo-error) help-echo "Undeclared variable or function 'attrs'" fontified t)) . 334) (undo-tree-id2106 . -5) (undo-tree-id2107 . -5)) nil (25361 51992 396812 384000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 334)) nil (25361 51992 396809 265000) 0 nil])
([nil nil ((334 . 340)) nil (25361 51992 396808 515000) 0 nil])
([nil nil ((334 . 336) 340) nil (25361 52003 894753 739000) 0 nil])
([nil nil ((244 . 246) 252) nil (25361 52008 525314 36000) 0 nil] [nil nil ((244 . 246) 252) ((#("  " 0 2 (fontified t)) . 244)) (25361 52003 599878 978000) 0 nil])
([nil nil ((344 . 352)) nil (25361 52008 525313 97000) 0 nil])
([nil nil ((#("  " 0 2 (face (whitespace-line whitespace-trailing) fontified t)) . -426) (undo-tree-id2105 . -2) 254) ((426 . 428) (t 25361 51992 409277 289000)) (25361 51992 396802 47000) 0 nil])
([nil nil ((#("u" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "TypeError: redeclaration of const url." font-lock-face font-lock-variable-name-face fontified t)) . 352) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1)) nil (25361 52008 525311 925000) 0 nil])
nil
([nil nil ((352 . 353)) nil (25361 52008 525308 326000) 0 nil])
([nil nil ((#("  " 0 2 (face (whitespace-line whitespace-trailing) fontified t)) . -434) (undo-tree-id2150 . -2) 353) nil (25361 52008 525304 265000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 243) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (t 25361 52008 537163 551000)) nil (25361 52010 495556 813000) 0 nil])
([nil nil ((#("  const pathname = url.pathname.length < 2 ? 'index' : url.pathname.substr(1).replace(/\\.\\w+$/, '');" 0 2 (fontified t) 2 7 (font-lock-face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 16 (font-lock-face font-lock-variable-name-face fontified t) 16 23 (fontified t) 23 31 (font-lock-face js2-object-property-access fontified t) 31 32 (fontified t) 32 38 (font-lock-face js2-object-property-access fontified t) 38 45 (fontified t) 45 52 (font-lock-face font-lock-string-face fontified t) 52 59 (fontified t) 59 67 (font-lock-face js2-object-property-access fontified t) 67 68 (fontified t) 68 74 (font-lock-face js2-function-call fontified t) 74 78 (fontified t) 78 80 (font-lock-face js2-function-call fontified t) 80 85 (font-lock-face js2-function-call face (whitespace-line js2-function-call) fontified t) 85 86 (face (whitespace-line) fontified t) 86 87 (syntax-table (7 . 47) font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 87 93 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 93 94 (syntax-table (7 . 47) font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 94 96 (face (whitespace-line) fontified t) 96 98 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified t) 98 99 (face (whitespace-line) fontified t) 99 100 (face (whitespace-line) rear-nonsticky t fontified t)) . 434) (undo-tree-id2160 . -100) (t 25361 52010 513149 352000)) nil (25361 52018 141456 756000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -433) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) 434) nil (25361 52018 141454 421000) 0 nil])
([nil nil ((242 . 245)) nil (25361 52018 141443 634000) 0 nil])
([nil nil ((nil fontified nil 344 . 345) (nil fontified nil 343 . 344) (nil font-lock-face font-lock-string-face 341 . 343) (nil fontified nil 341 . 343) (nil fontified nil 339 . 341) (nil font-lock-face font-lock-string-face 338 . 339) (nil fontified nil 338 . 339) (nil font-lock-face font-lock-string-face 332 . 338) (nil fontified nil 332 . 338) (nil font-lock-face font-lock-string-face 331 . 332) (nil fontified nil 331 . 332) (nil fontified nil 330 . 331) (nil font-lock-face js2-function-call 325 . 330) (nil fontified nil 325 . 330) (nil font-lock-face js2-function-call 323 . 325) (nil fontified nil 323 . 325) (nil fontified nil 319 . 323) (nil font-lock-face js2-function-call 313 . 319) (nil fontified nil 313 . 319) (nil fontified nil 312 . 313) (nil font-lock-face js2-object-property-access 304 . 312) (nil fontified nil 304 . 312) (nil fontified nil 297 . 304) (nil font-lock-face font-lock-string-face 290 . 297) (nil fontified nil 290 . 297) (nil fontified nil 283 . 290) (nil font-lock-face js2-object-property-access 277 . 283) (nil fontified nil 277 . 283) (nil fontified nil 276 . 277) (nil font-lock-face js2-object-property-access 268 . 276) (nil fontified nil 268 . 276) (nil fontified nil 261 . 268) (nil font-lock-face font-lock-variable-name-face 253 . 261) (nil fontified nil 253 . 261) (nil fontified nil 252 . 253) (nil font-lock-face font-lock-keyword-face 247 . 252) (nil fontified nil 247 . 252) (nil fontified nil 245 . 247) (245 . 345)) nil (25361 52018 141440 839000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -245) 345) nil (25361 52018 141428 728000) 0 nil])
([nil nil ((3994 . 3995) (t 25361 52018 157093 903000)) nil (25361 52033 565316 614000) 0 nil])
([nil nil ((#("}" 0 1 (face (whitespace-line) fontified nil)) . 3997) (undo-tree-id2167 . -1) (3996 . 3997) (3995 . 3997) (#("{" 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified nil)) . -3995) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (3995 . 3996)) nil (25361 52033 565315 253000) 0 nil])
([nil nil ((3996 . 4007)) nil (25361 52033 565311 445000) 0 nil])
([nil nil ((#(")" 0 1 (face (whitespace-line) fontified nil)) . 4011) (undo-tree-id2164 . -1) (4010 . 4011) (4009 . 4011) (#("(" 0 1 (font-lock-face font-lock-string-face face (whitespace-line) fontified nil)) . -4009) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (4009 . 4010)) nil (25361 52033 565310 13000) 0 nil])
([nil nil ((#("}" 0 1 (face (whitespace-line) fontified nil)) . 4013) (undo-tree-id2161 . -1) (4012 . 4013) (4011 . 4013) (#("{" 0 1 (font-lock-face font-lock-string-face face (whitespace-line font-lock-string-face) fontified nil)) . -4011) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (4010 . 4012)) nil (25361 52033 565304 938000) 0 nil])
([nil nil ((4012 . 4023)) nil (25361 52033 565291 111000) 0 nil])
([nil nil ((#(" as" 0 1 (fontified t) 1 3 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 415) (undo-tree-id2179 . -1) (undo-tree-id2180 . -3) (undo-tree-id2181 . -1) (undo-tree-id2182 . -3) (undo-tree-id2183 . -1) (undo-tree-id2184 . -3) (undo-tree-id2185 . -1) (undo-tree-id2186 . -3) (t 25361 52033 576979 528000)) nil (25361 52050 102465 548000) 0 nil])
([nil nil ((#(" HTML" 0 1 (fontified t) 1 5 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 415) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -5) (undo-tree-id2177 . -1) (undo-tree-id2178 . -5)) nil (25361 52050 102458 371000) 0 nil])
([nil nil ((#("Link" 0 1 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 1 3 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 3 4 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 415) (undo-tree-id2172 . -4) (undo-tree-id2173 . -4)) nil (25361 52050 102453 175000) 0 nil])
([nil nil ((#("Element" 0 5 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t) 5 7 (cursor-sensor-functions (js2-echo-error) help-echo "missing ; before statement" fontified t)) . 415) (undo-tree-id2170 . -7) (undo-tree-id2171 . -7)) nil (25361 52050 102447 450000) 0 nil])
([nil nil ((4200 . 4210) (t 25361 52050 116853 200000)) nil (25361 52754 517578 467000) 0 nil])
([nil nil ((4209 . 4215)) nil (25361 52754 517577 450000) 0 nil])
([nil nil ((4216 . 4235)) nil (25361 52754 517576 541000) 0 nil])
([nil nil ((4235 . 4242)) nil (25361 52754 517575 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3692 . 3693) (nil font-lock-face font-lock-string-face 3666 . 3693) (nil fontified nil 3666 . 3693) (nil font-lock-face font-lock-string-face 3663 . 3666) (nil fontified nil 3663 . 3666) (nil font-lock-face font-lock-string-face 3652 . 3663) (nil fontified nil 3652 . 3663) (3652 . 3693)) nil (25361 52754 517571 92000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3359 . 3360) (nil font-lock-face font-lock-string-face 3333 . 3360) (nil fontified nil 3333 . 3360) (nil font-lock-face font-lock-string-face 3330 . 3333) (nil fontified nil 3330 . 3333) (nil font-lock-face font-lock-string-face 3319 . 3330) (nil fontified nil 3319 . 3330) (3319 . 3360) (t 25361 52754 525193 514000)) nil (25361 52771 676170 348000) 0 nil])
([nil nil ((3319 . 3320) (t 25361 52771 684972 342000)) nil (25361 52774 2267 852000) 0 nil])
([nil nil ((3326 . 3327) (t 25361 52774 12942 263000)) nil (25361 52792 842817 406000) 0 nil])
([nil nil ((#("\\" 0 1 (font-lock-face font-lock-string-face fontified t)) . -3326) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) 3327) nil (25361 52792 842815 911000) 0 nil])
([nil nil ((3327 . 3328)) nil (25361 52792 842805 42000) 0 nil])
([nil nil ((3335 . 3336)) nil (25361 52792 842804 226000) 0 nil])
([nil nil ((3342 . 3343)) nil (25361 52792 842802 973000) 0 nil])
([nil nil ((3363 . 3364)) nil (25361 52792 842798 675000) 0 nil])
([nil nil ((4380 . 4385) (t 25361 52792 856698 128000)) nil (25361 53127 669798 708000) 0 nil])
([nil nil ((3418 . 3427) (t 25361 53127 684287 746000)) nil (25361 53201 508382 407000) 0 nil])
([nil nil ((3109 . 3116) (t 25361 53201 523298 733000)) nil (25361 53337 407565 521000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3298 . 3299) (nil fontified nil 3110 . 3299) (3110 . 3299)) nil (25361 53337 407564 595000) 0 nil])
([nil nil ((3115 . 3117) 3139) nil (25361 53337 407563 502000) 0 nil])
([nil nil ((3160 . 3162) 3272) nil (25361 53337 407562 635000) 0 nil])
([nil nil ((3279 . 3281) 3294) nil (25361 53337 407561 703000) 0 nil])
([nil nil ((#("      return null;" 0 6 (fontified t) 6 12 (font-lock-face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 17 (font-lock-face font-lock-constant-face fontified t) 17 18 (fontified t)) . 3312) (undo-tree-id2205 . -18) (undo-tree-id2206 . -18) (undo-tree-id2207 . -18) (undo-tree-id2208 . -18) (undo-tree-id2209 . -6) (undo-tree-id2210 . -18)) nil (25361 53337 407560 548000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3312) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1)) nil (25361 53337 407555 737000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3110) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1)) nil (25361 53337 407553 211000) 0 nil])
([nil nil ((#("tslint:disable-next-line:no-console" 0 35 (font-lock-face font-lock-comment-face fontified t)) . 3119) (undo-tree-id2194 . -21) (undo-tree-id2195 . -21) (undo-tree-id2196 . -35) (undo-tree-id2197 . 35) (undo-tree-id2198 . -6) (undo-tree-id2199 . -35)) nil (25361 53337 407549 859000) 0 nil])
([nil nil ((3119 . 3130)) nil (25361 53337 407544 900000) 0 nil])
([nil nil ((3130 . 3151)) nil (25361 53337 407544 84000) 0 nil])
([nil nil ((3151 . 3163)) nil (25361 53337 407543 342000) 0 nil])
([nil nil ((#("s" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3162) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) 3163) nil (25361 53337 407542 29000) 0 nil])
([nil nil ((3162 . 3178)) nil (25361 53337 407538 62000) 0 nil])
([nil nil ((#("      " 0 6 (face whitespace-trailing fontified t)) . -3328) (undo-tree-id2190 . -6) 3177) nil (25361 53337 407534 117000) 0 nil])
([nil nil ((3177 . 3185) (t 25361 53337 421455 305000)) nil (25361 53349 902933 359000) 0 nil])
([nil nil ((#("n" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3182) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (#("a" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3183) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (#("c" 0 1 (font-lock-face font-lock-comment-face fontified t)) . -3184) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) 3185) nil (25361 53349 902931 167000) 0 nil])
([nil nil ((3182 . 3187)) nil (25361 53349 902919 432000) 0 nil])
([nil nil ((3177 . 3187)) nil (25361 53349 902918 678000) 0 nil])
([nil nil ((3197 . 3199)) nil (25361 53349 902917 872000) 0 nil])
([nil nil ((#("d" 0 1 (face (whitespace-line font-lock-comment-face) font-lock-face font-lock-comment-face fontified t)) . -3198) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) 3199) nil (25361 53349 902916 765000) 0 nil])
([nil nil ((3198 . 3212)) nil (25361 53349 902913 497000) 0 nil])
([nil nil ((#("n" 0 1 (face (whitespace-line font-lock-comment-face) font-lock-face font-lock-comment-face fontified t)) . -3210) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (#("e" 0 1 (face (whitespace-line font-lock-comment-face) font-lock-face font-lock-comment-face fontified t)) . -3211) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) 3212) nil (25361 53349 902911 700000) 0 nil])
([nil nil ((3210 . 3219)) nil (25361 53349 902902 489000) 0 nil])
([nil current ((3181 . 3190) (#(" " 0 1 (font-lock-face font-lock-comment-face fontified nil)) . -3181) (undo-tree-id2211 . -1) (nil font-lock-face nil 3180 . 3181) (3180 . 3181) 3219) nil (25361 53349 902898 76000) 0 nil])
nil
